{"version":3,"sources":["utils/setup-firebase.js","constants/index.js","components/Modal/index.jsx","components/Search/index.jsx","components/Table/index.jsx","App/index.jsx","App/selectors.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","storageBucket","messagingSenderId","projectId","firestore","firebasedb","database","STATUS_TYPES_LIST","STATUS_COLORS","1","2","3","4","STATUS_TYPES","reduce","acc","status","index","array","STATUS_DISPLAY","map","value","text","Meta","SenatorModal","senator","visible","closeModal","townHalls","width","title","displayName","party","onOk","onCancel","footer","className","style","maxWidth","bordered","cover","alt","src","govtrack_id","description","quote","actions","socials","facebook","target","rel","href","FacebookOutlined","twitter","TwitterOutlined","url","LinkOutlined","contact","address","phone","length","itemLayout","dataSource","renderItem","item","console","log","Item","extra","link","linkName","eventId","eventName","meetingType","Time","dateString","townHallsDisplay","Option","Search","senators","selectSenator","handleStateSearch","showSearch","placeholder","optionFilterProp","onChange","find","id","onFocus","onBlur","onSearch","val","filterOption","input","option","children","toLowerCase","indexOf","senatorOrState","key","Column","makeSortFunction","a","b","SenateTable","getSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","ref","node","searchInput","e","onPressEnter","props","handleSearch","marginBottom","display","type","onClick","icon","SearchOutlined","size","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","includes","onFilterDropdownVisibleChange","setTimeout","select","render","searchedColumn","highlightStyle","backgroundColor","searchWords","searchText","autoEscape","textToHighlight","this","rowKey","pagination","sticky","scroll","x","y","sorter","filters","openModal","React","Component","Header","Content","App","state","modalSenator","componentDidMount","once","then","snapshot","forEach","push","setState","collection","get","data","sort","scrollTo","options","document","querySelector","scrollIntoView","renderModal","thisTownhalls","filter","officePersonId","senateMapByStatus","cur","statusKey","statusNo","flex","content","join","behavior","gutter","Boolean","window","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.23934c26.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/database';\n\nconst config = {\n    apiKey: 'AIzaSyDwZ41RWIytGELNBnVpDr7Y_k1ox2F2Heg',\n    authDomain: 'townhallproject-86312.firebaseapp.com',\n    databaseURL: 'https://townhallproject-86312.firebaseio.com',\n    storageBucket: 'townhallproject-86312.appspot.com',\n    messagingSenderId: '208752196071',\n    projectId: 'townhallproject-86312',\n};\n\n// const config = {\n//     apiKey: 'AIzaSyCJncx2G6bUnecl4H2VHSBTDfRRxg7H5Fs',\n//     authDomain: 'townhalltestingsms.firebaseapp.com',\n//     databaseURL: 'https://townhalltestingsms.firebaseio.com',\n//     storageBucket: 'townhalltestingsms.appspot.com',\n//     messagingSenderId: '86976100332',\n//     projectId: 'townhalltestingsms',\n// };\n\nfirebase.initializeApp(config);\nconst firestore = firebase.firestore();\nconst firebasedb = firebase.database();\n\nexport {\n    firebase,\n    firebasedb,\n    firestore\n};","export const STATUS_TYPES_LIST = [\n    \"Do not consider nominee - winner of 2020 Election should choose\",\n    \"Consider nominee but only after Election\", \n    \"Not on record\", \n    \"Consider new nominee\", \n    \"Other status\",\n    \"Unknown\"\n];\n\nexport const STATUS_COLORS = {\n    1: \"#5e3c99\",\n    2: \"#b2abd2\",\n    3: \"#7a7688\",\n    4: \"#e66101\",\n}\n\nexport const STATUS_TYPES = STATUS_TYPES_LIST.reduce((acc, status, index, array) => {\n    acc[index + 1] = status;\n    return acc;\n}, {})\n\nexport const STATUS_DISPLAY = STATUS_TYPES_LIST.map((status, index) => {\n    return {\n        value: index + 1,\n        text: status,\n    }\n})","import React from \"react\";\nimport { Modal, Card, Row, Col, List } from \"antd\";\nimport {\n  FacebookOutlined,\n  TwitterOutlined,\n  LinkOutlined,\n} from \"@ant-design/icons\";\nimport { STATUS_TYPES } from \"../../constants\";\nimport \"./style.css\";\n\nconst { Meta } = Card;\n\nconst townHallsDisplay = (townHalls) => (\n  <Card title=\"Attend an event\">\n    <List\n      itemLayout=\"vertical\"\n      dataSource={townHalls}\n      renderItem={(item) => {\n          console.log(item)\n          return (\n            <List.Item\n              extra={\n                item.link\n                  ? (<a href={item.link}>{item.linkName || \"More info\"}</a>)\n                  : []\n              }\n  \n            >\n              <List.Item.Meta\n                title={\n                  <a\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href={`https://townhallproject.com/${item.eventId}`}\n                  >\n                    {item.eventName}\n                  </a>\n                }\n                description={`${item.meetingType} at ${item.Time} on ${item.dateString}`}\n              />\n            </List.Item>\n          );}}\n    />\n  </Card>\n);\n\nconst SenatorModal = ({ senator, visible, closeModal, townHalls }) => (\n  <>\n    <Modal\n      width={\"80%\"}\n      title={`Senator ${senator.displayName} (${senator.party[0]})`}\n      visible={visible}\n      onOk={closeModal}\n      onCancel={closeModal}\n      footer={null}\n    >\n      <div className=\"modal-row\">\n        <div className=\"left-container modal-col\">\n          <Card\n            style={{ maxWidth: 200 }}\n            bordered={false}\n            className={`status__${senator.status}`}\n            cover={\n              <img\n                alt=\"example\"\n                src={`https://www.govtrack.us/static/legislator-photos/${senator.govtrack_id}-200px.jpeg`}\n              />\n            }\n          >\n            <Meta description={`Position: ${STATUS_TYPES[senator.status]}`} />\n          </Card>\n        </div>\n        <div className=\"right-container modal-col\">\n          {senator.quote && <p className=\"quote\">{senator.quote.text}</p>}\n          <Card\n            title=\"Contact the senator:\"\n            actions={[\n              senator.socials.facebook && (\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={`https://facebook.com/${senator.socials.facebook}`}\n                >\n                  <FacebookOutlined />\n                </a>\n              ),\n              senator.socials.twitter && (\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={`https://twitter.com/${senator.socials.twitter}`}\n                >\n                  <TwitterOutlined />\n                </a>\n              ),\n              senator.socials.url && (\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={senator.socials.url}\n                >\n                  <LinkOutlined />\n                </a>\n              ),\n            ]}\n          >\n            <p>{senator.contact.address}</p>\n            <p>{senator.contact.phone}</p>\n          </Card>\n\n          {townHalls.length > 0 && townHallsDisplay(townHalls)}\n        </div>\n      </div>\n    </Modal>\n  </>\n);\n\nexport default SenatorModal;\n","import React from \"react\";\nimport { Select } from 'antd';\nimport { find } from 'lodash';\n\n// import states from \"../../data/states\";\n\nconst { Option } = Select;\n// const statesMap = states.map((state) => ({\n//   id: state,\n//   displayName: state,\n// }))\n\nconst Search = ({ senators, selectSenator, handleStateSearch }) => {\n  function onChange(value) {\n    const senator = find(senators, { id: value });\n    if (senator) {\n      selectSenator(senator);\n    }\n \n  }\n\n  function onBlur() {\n    //   console.log('blur');\n  }\n\n  function onFocus() {\n    //   console.log('focus');\n  }\n\n  function onSearch(val) {\n    //   console.log('search:', val);\n  }\n  return (\n    <Select\n      showSearch\n      style={{ width: 200 }}\n      placeholder=\"Search for your Senator\"\n      optionFilterProp=\"children\"\n      onChange={onChange}\n      onFocus={onFocus}\n      onBlur={onBlur}\n      onSearch={onSearch}\n      filterOption={(input, option) =>\n        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      }\n    >\n      {senators.map((senatorOrState) => (\n        <Option key={senatorOrState.id}>{senatorOrState.displayName}</Option>\n      ))}\n    </Select>\n  );\n};\n\n  export default Search;","import React from \"react\";\nimport { Table, Button, Tag, Input, Space } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport Highlighter from \"react-highlight-words\";\n\nimport { STATUS_COLORS, STATUS_DISPLAY, STATUS_TYPES } from \"../../constants\";\n\nconst { Column } = Table;\nexport const makeSortFunction = (key) => {\n  return (a, b) => {\n    if (a[key] > b[key]) {\n      return 1;\n    }\n    if (a[key] < b[key]) {\n      return -1;\n    }\n    return 0;\n  };\n};\n\nclass SenateTable extends React.Component {\n  getSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node) => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() =>\n            this.props.handleSearch(selectedKeys, confirm, dataIndex)\n          }\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() =>\n              this.props.handleSearch(selectedKeys, confirm, dataIndex)\n            }\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button\n            onClick={() => this.props.handleReset(clearFilters)}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex]\n            .toString()\n            .toLowerCase()\n            .includes(value.toLowerCase())\n        : \"\",\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select(), 100);\n      }\n    },\n    render: (text) =>\n      this.props.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n          searchWords={[this.props.searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : \"\"}\n        />\n      ) : (\n        text\n      ),\n  });\n  render() {\n    const { senators } = this.props;\n    return (\n      <Table\n        dataSource={senators}\n        rowKey=\"id\"\n        pagination={false}\n        sticky\n        scroll={{\n          x: true,\n          y: \"60vh\",\n        }}\n      >\n        <Column title=\"First Name\" dataIndex=\"first_name\" key=\"first_name\" />\n        <Column\n          title=\"Last Name\"\n          dataIndex=\"last_name\"\n          key=\"last_name\"\n          sorter={makeSortFunction(\"last_name\")}\n        />\n        <Column\n          {...this.getSearchProps(\"state\")}\n          title=\"State\"\n          dataIndex=\"state\"\n          width={100}\n          key=\"state\"\n          sorter={makeSortFunction(\"state\")}\n        />\n        <Column\n          title=\"Party\"\n          dataIndex=\"party\"\n          key=\"party\"\n          sorter={makeSortFunction(\"party\")}\n        />\n        <Column\n          title=\"Status\"\n          dataIndex=\"status\"\n          key=\"status\"\n          filters={STATUS_DISPLAY}\n          onFilter={(value, record) => {\n            return record.status.includes(value);\n          }}\n          sorter={makeSortFunction(\"status\")}\n          render={(id) => {\n            return (\n              <Tag color={STATUS_COLORS[id]} key={id}>\n                {STATUS_TYPES[id]}\n              </Tag>\n            );\n          }}\n        />\n        <Column\n          title=\"See More\"\n          key=\"see-more\"\n          render={(record) => {\n            return (\n              <>\n                <Button onClick={() => this.props.openModal(record)}>Details</Button>\n              </>\n            );\n          }}\n        />\n      </Table>\n    );\n  }\n}\n\nexport default SenateTable;\n","import React, { Component } from 'react';\nimport {\n  Col,\n  Row,\n  Popover,\n  Layout,\n} from \"antd\";\nimport { map, filter } from \"lodash\";\n\n\nimport { firestore, firebasedb } from '../utils/setup-firebase';\nimport { getSenatorsByStatus } from './selectors';\nimport SenatorModal from \"../components/Modal\";\nimport Search from \"../components/Search\";\nimport './style.css';\nimport { STATUS_TYPES } from '../constants';\nimport SenateTable, { makeSortFunction } from '../components/Table';\nconst { Header, Content } = Layout;\n\n\nclass App extends Component {\n  state = {\n    senators: [],\n    modalSenator: null,\n    searchText: \"\",\n  };\n\n  componentDidMount = () => {\n    firebasedb\n      .ref(\"townHalls\")\n      .once(\"value\")\n      .then((snapshot) => {\n        const townHalls = [];\n        snapshot.forEach((node) => {\n          townHalls.push(node.val());\n        });\n        this.setState({ townHalls });\n      });\n    firestore\n      .collection(\"whip_count_2020\")\n      .get()\n      .then((snapshot) => {\n        const senators = [];\n        snapshot.forEach((node) => {\n          const data = {\n            ...node.data(),\n            id: node.id,\n          };\n          senators.push(data);\n        });\n        senators.sort(makeSortFunction(\"state\"));\n        this.setState({ senators });\n      });\n  };\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = (clearFilters) => {\n    clearFilters();\n    this.setState({ searchText: \"\" });\n  };\n\n  scrollTo = (id, options) => {\n    const row = document.querySelector(`[data-row-key=\"${id}\"]`);\n    row.scrollIntoView(options);\n  };\n\n  renderModal = () => {\n    const { modalSenator, townHalls } = this.state;\n    if (!modalSenator) {\n      return null;\n    }\n    const thisTownhalls = filter(townHalls, {\n      officePersonId: modalSenator.id,\n    });\n    return (\n      <SenatorModal\n        visible={true}\n        senator={modalSenator}\n        townHalls={thisTownhalls}\n        closeModal={this.closeModal}\n      />\n    );\n  };\n\n  openModal = (senator) => {\n    this.setState({ modalSenator: senator });\n  };\n\n  selectSenator = (senator) => {\n    this.scrollTo(senator.id);\n\n    this.openModal(senator);\n  };\n\n\n  closeModal = () => {\n    this.setState({ modalSenator: null });\n  };\n\n  render() {\n    const senateMapByStatus = getSenatorsByStatus(this.state.senators);\n    return (\n      <Layout className=\"App\">\n        <Header>\n          <Search\n            handleStateSearch={this.handleSearch}\n            senators={this.state.senators}\n            selectSenator={this.selectSenator}\n          />\n        </Header>\n        <Content className=\"team\">\n          <Row className=\"all-status-container\">\n            {map(senateMapByStatus, (senators, statusNo) => {\n              return (\n                <Col\n                  key={statusNo}\n                  flex={\"1 1 auto\"}\n                  className={`status-col status__${statusNo}`}\n                >\n                  <h3>{`${STATUS_TYPES[statusNo]} (${senators.length})`}</h3>\n                  <div className=\"status-container\">\n                    {map(senators, (senator) => (\n                      <Popover\n                        key={senator.id}\n                        content={\n                          <p>\n                            {senator.party} {senator.state}\n                          </p>\n                        }\n                        title={`Sen. ${senator.displayName}`}\n                      >\n                        <div\n                          className={[\n                            \"image-container\",\n                            senator.party.toLowerCase(),\n                          ].join(\" \")}\n                          onClick={() =>\n                            this.scrollTo(senator.id, { behavior: \"smooth\" })\n                          }\n                        >\n                          <img\n                            width={200}\n                            alt={`${senator.displayName}`}\n                            src={`https://www.govtrack.us/static/legislator-photos/${senator.govtrack_id}-100px.jpeg`}\n                          />\n                        </div>\n                      </Popover>\n                    ))}\n                  </div>\n                </Col>\n              );\n            })}\n          </Row>\n          <Row className=\"table-container\" gutter={16}>\n            <SenateTable\n              senators={this.state.senators}\n              getSearchProps={this.getSearchProps}\n              handleSearch={this.handleSearch}\n              handleReset={this.handleReset}\n              searchedColumn={this.state.searchedColumn}\n              searchText={this.state.searchText}\n              openModal={this.openModal}\n            />\n            {this.renderModal()}\n          </Row>\n        </Content>\n      </Layout>\n    );\n  }\n}\n\n\nexport default App;\n","export const getSenatorsByStatus = (allSenators) => (\n    allSenators.reduce((acc, cur) => {\n        const statusKey = cur.status\n        if (!acc[statusKey]) {\n            acc[statusKey] = [cur]\n        } else {\n            acc[statusKey].push(cur)\n        }\n        return acc;\n    }, {})\n)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}