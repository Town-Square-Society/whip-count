{"version":3,"sources":["utils/setup-firebase.js","constants/index.js","components/Modal/index.jsx","data/states.js","components/Search/index.jsx","components/Table/index.jsx","App/index.jsx","App/selectors.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","storageBucket","messagingSenderId","projectId","firestore","firebasedb","database","STATUS_TYPES_LIST","STATUS_COLORS","1","2","3","4","STATUS_TYPES","reduce","acc","status","index","array","STATUS_DISPLAY","map","value","text","Meta","SenatorModal","quote","senator","visible","closeModal","townHalls","width","title","displayName","party","state","onOk","onCancel","footer","className","style","maxWidth","bordered","cover","alt","src","govtrack_id","description","year","citation","href","actions","socials","facebook","target","rel","FacebookOutlined","twitter","TwitterOutlined","url","LinkOutlined","contact","address","phone","length","itemLayout","dataSource","renderItem","item","console","log","Item","extra","link","linkName","eventId","eventName","meetingType","Time","dateString","townHallsDisplay","Option","statesMap","AL","AK","AS","AZ","AR","CA","CO","CT","DE","DC","FM","FL","GA","GU","HI","ID","IL","IN","IA","KS","KY","LA","ME","MH","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","MP","OH","OK","OR","PW","PA","PR","RI","SC","SD","TN","TX","UT","VT","VI","VA","WA","WV","WI","WY","stateName","abr","id","Search","senators","selectSenator","handleStateSearch","handleReset","showSearch","allowClear","showArrow","suffixIcon","SearchOutlined","placeholder","optionFilterProp","onChange","states","includes","find","onFocus","onBlur","onSearch","val","onClear","filterOption","input","option","children","toLowerCase","indexOf","senatorOrState","key","Column","makeSortFunction","a","b","SenateTable","props","getSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","ref","node","searchInput","e","onPressEnter","handleSearch","marginBottom","display","type","onClick","icon","size","filterIcon","filtered","color","undefined","onFilter","record","toString","onFilterDropdownVisibleChange","setTimeout","select","render","searchedColumn","highlightStyle","backgroundColor","searchWords","searchText","autoEscape","textToHighlight","windowWidth","this","setState","window","innerWidth","addEventListener","rowKey","pagination","sticky","scroll","x","y","sorter","responsive","filters","openModal","React","Component","Header","Content","tooltipPlacement","App","modalSenator","componentDidMount","once","then","snapshot","forEach","push","collection","get","data","sort","scrollTo","options","row","document","querySelector","scrollIntoView","renderModal","thisTownhalls","filter","officePersonId","senateMapByStatus","cur","statusKey","filteredSenators","allSenators","filterKey","filterValue","getFilteredSenators","ghost","statusNo","flex","placement","join","behavior","strokeColor","showInfo","strokeLinecap","percent","trailColor","strokeWidth","success","gutter","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f2fbf6e8.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/database';\n\nconst config = {\n    apiKey: 'AIzaSyDwZ41RWIytGELNBnVpDr7Y_k1ox2F2Heg',\n    authDomain: 'townhallproject-86312.firebaseapp.com',\n    databaseURL: 'https://townhallproject-86312.firebaseio.com',\n    storageBucket: 'townhallproject-86312.appspot.com',\n    messagingSenderId: '208752196071',\n    projectId: 'townhallproject-86312',\n};\n\n// const config = {\n//     apiKey: 'AIzaSyCJncx2G6bUnecl4H2VHSBTDfRRxg7H5Fs',\n//     authDomain: 'townhalltestingsms.firebaseapp.com',\n//     databaseURL: 'https://townhalltestingsms.firebaseio.com',\n//     storageBucket: 'townhalltestingsms.appspot.com',\n//     messagingSenderId: '86976100332',\n//     projectId: 'townhalltestingsms',\n// };\n\nfirebase.initializeApp(config);\nconst firestore = firebase.firestore();\nconst firebasedb = firebase.database();\n\nexport {\n    firebase,\n    firebasedb,\n    firestore\n};","export const STATUS_TYPES_LIST = [\n    \"Do not consider nominee - winner of 2020 Election should choose\",\n    \"Consider nominee but only after Election\", \n    \"Not on record\", \n    \"Consider new nominee\", \n    \"Other status\",\n    \"Unknown\"\n];\n\nexport const STATUS_COLORS = {\n    1: \"#5e3c99\",\n    2: \"#b2abd2\",\n    3: \"#7a7688\",\n    4: \"#e66101\",\n}\n\nexport const STATUS_TYPES = STATUS_TYPES_LIST.reduce((acc, status, index, array) => {\n    acc[index + 1] = status;\n    return acc;\n}, {})\n\nexport const STATUS_DISPLAY = STATUS_TYPES_LIST.map((status, index) => {\n    return {\n        value: index + 1,\n        text: status,\n    }\n})","import React from \"react\";\nimport { Modal, Card, Row, Col, List } from \"antd\";\nimport {\n  FacebookOutlined,\n  TwitterOutlined,\n  LinkOutlined,\n} from \"@ant-design/icons\";\nimport { STATUS_TYPES } from \"../../constants\";\nimport \"./style.css\";\n\nconst { Meta } = Card;\n\nconst townHallsDisplay = (townHalls) => (\n  <Card title=\"Attend an event\">\n    <List\n      itemLayout=\"vertical\"\n      dataSource={townHalls}\n      renderItem={(item) => {\n          console.log(item)\n          return (\n            <List.Item\n              extra={\n                item.link\n                  ? (<a href={item.link}>{item.linkName || \"More info\"}</a>)\n                  : []\n              }\n  \n            >\n              <List.Item.Meta\n                title={\n                  <a\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href={`https://townhallproject.com/${item.eventId}`}\n                  >\n                    {item.eventName}\n                  </a>\n                }\n                description={`${item.meetingType} at ${item.Time} on ${item.dateString}`}\n              />\n            </List.Item>\n          );}}\n    />\n  </Card>\n);\n\nconst renderQuote = (quote) => {\n  return (\n    <>\n      {quote.year && <p className=\"quote-year\">Statement in {quote.year}</p>}\n      <p className=\"quote\">{quote.text}</p>\n      {quote.citation && <p className=\"quote-citation\"><a href={quote.citation}>Link to citation</a></p>}\n    </>\n  );\n}\n\nconst SenatorModal = ({ senator, visible, closeModal, townHalls }) => (\n  <>\n    <Modal\n      width={\"80%\"}\n      title={`Senator ${senator.displayName} (${senator.party[0]}) ${senator.state}`}\n      visible={visible}\n      onOk={closeModal}\n      onCancel={closeModal}\n      footer={null}\n    \n    >\n      <div className=\"modal-row\">\n        <div className=\"left-container modal-col\">\n          <Card\n            style={{ maxWidth: 200 }}\n            bordered={false}\n            className={`status__${senator.status} photo-card`}\n            cover={\n              <img\n                alt=\"example\"\n                src={`https://www.govtrack.us/static/legislator-photos/${senator.govtrack_id}-200px.jpeg`}\n              />\n            }\n          >\n            <Meta description={`Position: ${STATUS_TYPES[senator.status]}`} />\n          </Card>\n        </div>\n        <div className=\"right-container modal-col\">\n          {senator.quote && renderQuote(senator.quote)}\n          <Card\n            title=\"Contact:\"\n            actions={[\n              senator.socials.facebook && (\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={`https://facebook.com/${senator.socials.facebook}`}\n                >\n                  <FacebookOutlined />\n                </a>\n              ),\n              senator.socials.twitter && (\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={`https://twitter.com/${senator.socials.twitter}`}\n                >\n                  <TwitterOutlined />\n                </a>\n              ),\n              senator.socials.url && (\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={senator.socials.url}\n                >\n                  <LinkOutlined />\n                </a>\n              ),\n            ]}\n          >\n            <p>{senator.contact.address}</p>\n            <p>{senator.contact.phone}</p>\n          </Card>\n\n          {townHalls.length > 0 && townHallsDisplay(townHalls)}\n        </div>\n      </div>\n    </Modal>\n  </>\n);\n\nexport default SenatorModal;\n","export const statesAb = {\n    AL: \"Alabama\",\n    AK: \"Alaska\",\n    AS: \"American Samoa\",\n    AZ: \"Arizona\",\n    AR: \"Arkansas\",\n    CA: \"California\",\n    CO: \"Colorado\",\n    CT: \"Connecticut\",\n    DE: \"Delaware\",\n    DC: \"District Of Columbia\",\n    FM: \"Federated States Of Micronesia\",\n    FL: \"Florida\",\n    GA: \"Georgia\",\n    GU: \"Guam\",\n    HI: \"Hawaii\",\n    ID: \"Idaho\",\n    IL: \"Illinois\",\n    IN: \"Indiana\",\n    IA: \"Iowa\",\n    KS: \"Kansas\",\n    KY: \"Kentucky\",\n    LA: \"Louisiana\",\n    ME: \"Maine\",\n    MH: \"Marshall Islands\",\n    MD: \"Maryland\",\n    MA: \"Massachusetts\",\n    MI: \"Michigan\",\n    MN: \"Minnesota\",\n    MS: \"Mississippi\",\n    MO: \"Missouri\",\n    MT: \"Montana\",\n    NE: \"Nebraska\",\n    NV: \"Nevada\",\n    NH: \"New Hampshire\",\n    NJ: \"New Jersey\",\n    NM: \"New Mexico\",\n    NY: \"New York\",\n    NC: \"North Carolina\",\n    ND: \"North Dakota\",\n    MP: \"Northern Mariana Islands\",\n    OH: \"Ohio\",\n    OK: \"Oklahoma\",\n    OR: \"Oregon\",\n    PW: \"Palau\",\n    PA: \"Pennsylvania\",\n    PR: \"Puerto Rico\",\n    RI: \"Rhode Island\",\n    SC: \"South Carolina\",\n    SD: \"South Dakota\",\n    TN: \"Tennessee\",\n    TX: \"Texas\",\n    UT: \"Utah\",\n    VT: \"Vermont\",\n    VI: \"Virgin Islands\",\n    VA: \"Virginia\",\n    WA: \"Washington\",\n    WV: \"West Virginia\",\n    WI: \"Wisconsin\",\n    WY: \"Wyoming\"\n}\n\nexport default [\n    \"AK\",\n    \"AL\",\n    \"AR\",\n    \"AS\",\n    \"AZ\",\n    \"CA\",\n    \"CO\",\n    \"CT\",\n    \"DC\",\n    \"DE\",\n    \"FL\",\n    \"GA\",\n    \"GU\",\n    \"HI\",\n    \"IA\",\n    \"ID\",\n    \"IL\",\n    \"IN\",\n    \"KS\",\n    \"KY\",\n    \"LA\",\n    \"MA\",\n    \"MD\",\n    \"ME\",\n    \"MI\",\n    \"MN\",\n    \"MO\",\n    \"MP\",\n    \"MS\",\n    \"MT\",\n    \"NC\",\n    \"ND\",\n    \"NE\",\n    \"NH\",\n    \"NJ\",\n    \"NM\",\n    \"NV\",\n    \"NY\",\n    \"OH\",\n    \"OK\",\n    \"OR\",\n    \"PA\",\n    \"PR\",\n    \"RI\",\n    \"SC\",\n    \"SD\",\n    \"TN\",\n    \"TX\",\n    \"UT\",\n    \"VA\",\n    \"VI\",\n    \"VT\",\n    \"WA\",\n    \"WI\",\n    \"WV\",\n    \"WY\",\n];\n","import React from \"react\";\nimport { Select } from \"antd\";\nimport { find, map } from \"lodash\";\nimport { SearchOutlined } from \"@ant-design/icons\";\n\nimport states, { statesAb } from \"../../data/states\";\n\nconst { Option } = Select;\nconst statesMap = map(statesAb, (stateName, abr) => ({\n  id: abr,\n  displayName: stateName,\n}));\n\nconst Search = ({\n  senators,\n  selectSenator,\n  handleStateSearch,\n  handleReset,\n}) => {\n  function onChange(value) {\n    const isState = states.includes(value);\n    if (isState) {\n      handleStateSearch(value);\n    }\n    const senator = find(senators, { id: value });\n    if (senator) {\n      selectSenator(senator);\n    }\n  }\n\n  function onBlur() {\n    //   console.log('blur');\n  }\n\n  function onFocus() {\n    //   console.log('focus');\n  }\n\n  function onSearch(val) {\n    //   console.log('search:', val);\n  }\n  return (\n    <>\n      <h3>Where does your Senator stand?</h3>\n\n      <Select\n        showSearch\n        style={{ width: 300 }}\n        allowClear\n        showArrow={false}\n        suffixIcon={<SearchOutlined />}\n        placeholder=\"Search Senator's name or state\"\n        optionFilterProp=\"children\"\n        onChange={onChange}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        onSearch={onSearch}\n        onClear={handleReset}\n        filterOption={(input, option) => {\n          return (\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0 ||\n            option.value.toLowerCase().indexOf(input.toLowerCase()) >= 0\n          );\n        }}\n      >\n        {[...senators, ...statesMap].map((senatorOrState) => (\n          <Option key={senatorOrState.id}>{senatorOrState.displayName}</Option>\n        ))}\n      </Select>\n    </>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\nimport { Table, Button, Tag, Input, Space } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport Highlighter from \"react-highlight-words\";\n\nimport { STATUS_COLORS, STATUS_DISPLAY, STATUS_TYPES } from \"../../constants\";\nimport \"./style.css\";\n\nconst { Column } = Table;\nexport const makeSortFunction = (key) => {\n  return (a, b) => {\n    if (a[key] > b[key]) {\n      return 1;\n    }\n    if (a[key] < b[key]) {\n      return -1;\n    }\n    return 0;\n  };\n};\n\nclass SenateTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      windowWidth: 0,\n    };\n  }\n  componentDidMount() {\n    this.setState({ width: window.innerWidth });\n    window.addEventListener(\"resize\", () => {\n      this.setState({ width: window.innerWidth });\n    });\n  }\n  getSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node) => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() =>\n            this.props.handleSearch(selectedKeys, confirm, dataIndex)\n          }\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() =>\n              this.props.handleSearch(selectedKeys, confirm, dataIndex)\n            }\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button\n            onClick={() => this.props.handleReset(clearFilters)}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex]\n            .toString()\n            .toLowerCase()\n            .includes(value.toLowerCase())\n        : \"\",\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select(), 100);\n      }\n    },\n    render: (text) =>\n      this.props.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n          searchWords={[this.props.searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : \"\"}\n        />\n      ) : (\n        text\n      ),\n  });\n  render() {\n    const { senators } = this.props;\n    return (\n      <Table\n        dataSource={senators}\n        rowKey=\"id\"\n        pagination={false}\n        sticky\n        scroll={{\n          x: true,\n          y: \"60vh\",\n        }}\n      >\n        <Column\n        title=\"Name\"\n        dataIndex=\"displayName\"\n        key=\"displayName\"\n        sorter={makeSortFunction(\"last_name\")}\n        />\n        <Column\n          {...this.getSearchProps(\"state\")}\n          title=\"State\"\n          dataIndex=\"state\"\n          width={100}\n          key=\"state\"\n          sorter={makeSortFunction(\"state\")}\n          responsive={[\"md\"]}\n        />\n        <Column\n          title=\"Party\"\n          dataIndex=\"party\"\n          key=\"party\"\n          sorter={makeSortFunction(\"party\")}\n          responsive={[\"md\"]}\n        />\n        <Column\n          title=\"Position\"\n          dataIndex=\"status\"\n          key=\"status\"\n          filters={STATUS_DISPLAY}\n          onFilter={(value, record) => {\n            return record.status.includes(value);\n          }}\n          sorter={makeSortFunction(\"status\")}\n          render={(id) => {\n            return (\n              <Tag color={STATUS_COLORS[id]} key={id}>\n                {STATUS_TYPES[id]}\n              </Tag>\n            );\n          }}\n        />\n        <Column\n          title=\"See More\"\n          key=\"see-more\"\n          render={(record) => {\n            return (\n              <>\n                <Button onClick={() => this.props.openModal(record)}>\n                  Details\n                </Button>\n              </>\n            );\n          }}\n        />\n      </Table>\n    );\n  }\n}\n\nexport default SenateTable;\n","import React, { Component } from 'react';\nimport { Col, Row, Tooltip, Layout, Progress, Button } from \"antd\";\nimport { map, filter } from \"lodash\";\n\n\nimport { firestore, firebasedb } from '../utils/setup-firebase';\nimport { getFilteredSenators, getSenatorsByStatus } from './selectors';\nimport SenatorModal from \"../components/Modal\";\nimport Search from \"../components/Search\";\nimport './style.css';\nimport { STATUS_COLORS, STATUS_TYPES } from '../constants';\nimport SenateTable, { makeSortFunction } from '../components/Table';\nconst { Header, Content } = Layout;\n\nconst tooltipPlacement = {\n  1: \"right\",\n  2: \"top\",\n  3: \"top\",\n  4: \"left\"\n}\n\nclass App extends Component {\n  state = {\n    senators: [],\n    modalSenator: null,\n    searchText: \"\",\n    searchedColumn: \"\",\n  };\n\n  componentDidMount = () => {\n    firebasedb\n      .ref(\"townHalls\")\n      .once(\"value\")\n      .then((snapshot) => {\n        const townHalls = [];\n        snapshot.forEach((node) => {\n          townHalls.push(node.val());\n        });\n        this.setState({ townHalls });\n      });\n    firestore\n      .collection(\"whip_count_2020\")\n      .get()\n      .then((snapshot) => {\n        const senators = [];\n        snapshot.forEach((node) => {\n          const data = {\n            ...node.data(),\n            id: node.id,\n          };\n          senators.push(data);\n        });\n        senators.sort(makeSortFunction(\"state\"));\n        this.setState({ senators });\n      });\n  };\n\n  handleStateSearch = (value) => {\n    this.setState({\n      searchText: value,\n      searchedColumn: \"state\",\n    });\n  };\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = (clearFilters) => {\n    if (clearFilters) {\n      clearFilters();\n    }\n    this.setState({ searchText: \"\" });\n  };\n\n  scrollTo = (id, options) => {\n    const row = document.querySelector(`[data-row-key=\"${id}\"]`);\n    if (row) {\n      row.scrollIntoView(options);\n    }\n  };\n\n  renderModal = () => {\n    const { modalSenator, townHalls } = this.state;\n    if (!modalSenator) {\n      return null;\n    }\n    const thisTownhalls = filter(townHalls, {\n      officePersonId: modalSenator.id,\n    });\n    return (\n      <SenatorModal\n        visible={true}\n        senator={modalSenator}\n        townHalls={thisTownhalls}\n        closeModal={this.closeModal}\n      />\n    );\n  };\n\n  openModal = (senator) => {\n    this.setState({ modalSenator: senator });\n  };\n\n  selectSenator = (senator) => {\n    this.scrollTo(senator.id);\n    this.openModal(senator);\n  };\n\n  closeModal = () => {\n    this.setState({ modalSenator: null });\n  };\n\n  render() {\n    const senateMapByStatus = getSenatorsByStatus(this.state.senators);\n    const filteredSenators = getFilteredSenators(this.state.senators, this.state.searchedColumn, this.state.searchText);\n    return (\n      <Layout className=\"App\">\n        <Header>\n          <Search\n            handleStateSearch={this.handleStateSearch}\n            senators={this.state.senators}\n            selectSenator={this.selectSenator}\n            handleReset={this.handleReset}\n          />\n          <Button\n            ghost\n            target=\"_blank\"\n            href=\"https://docs.google.com/forms/d/e/1FAIpQLScH8KYmrnWScWJr1v3jUwMdxP5ekN5x0IZ05Q23J7SxoDoQrw/viewform\"\n          >\n            Submit position update\n          </Button>\n        </Header>\n        <Content className=\"team\">\n          <Row className=\"all-status-container\">\n            {map(senateMapByStatus, (senators, statusNo) => {\n              return (\n                <Col\n                  key={statusNo}\n                  flex={\"1 1 auto\"}\n                  className={`status-col status__${statusNo}`}\n                >\n                  <h3>{`${STATUS_TYPES[statusNo]} (${senators.length})`}</h3>\n                  <div className=\"status-container\">\n                    {map(senators, (senator) => (\n                      <Tooltip\n                        key={senator.id}\n                        placement={tooltipPlacement[statusNo]}\n                        title={`Sen. ${senator.displayName} (${senator.party[0]}) ${senator.state}`}\n                      >\n                        <div\n                          className={[\n                            \"image-container\",\n                            senator.party.toLowerCase(),\n                          ].join(\" \")}\n                          onClick={() =>\n                            this.scrollTo(senator.id, { behavior: \"smooth\" })\n                          }\n                        >\n                          <img\n                            width={200}\n                            alt={`${senator.displayName}`}\n                            src={`https://www.govtrack.us/static/legislator-photos/${senator.govtrack_id}-100px.jpeg`}\n                          />\n                        </div>\n                      </Tooltip>\n                    ))}\n                  </div>\n                </Col>\n              );\n            })}\n          </Row>\n          {senateMapByStatus[1] && (\n            <>\n              <Tooltip>\n                <Progress\n                  strokeColor={STATUS_COLORS[4]}\n                  showInfo={false}\n                  strokeLinecap=\"square\"\n                  percent={senateMapByStatus[4].length}\n                  trailColor=\"#7a76884d\"\n                  strokeWidth={12}\n                  success={{\n                    strokeLinecap: \"square\",\n                    strokeColor: STATUS_COLORS[1],\n                    percent:\n                      senateMapByStatus[1].length + senateMapByStatus[2].length,\n                  }}\n                />\n                <div className=\"half-way\"></div>\n              </Tooltip>\n            </>\n          )}\n          <Row className=\"table-container\" gutter={16}>\n            <SenateTable\n              senators={filteredSenators}\n              getSearchProps={this.getSearchProps}\n              handleSearch={this.handleSearch}\n              handleReset={this.handleReset}\n              searchedColumn={this.state.searchedColumn}\n              searchText={this.state.searchText}\n              openModal={this.openModal}\n            />\n            {this.renderModal()}\n          </Row>\n        </Content>\n      </Layout>\n    );\n  }\n}\n\n\nexport default App;\n","import { filter } from \"lodash\"; \n\nexport const getSenatorsByStatus = (allSenators) => (\n    allSenators.reduce((acc, cur) => {\n        const statusKey = cur.status\n        if (!acc[statusKey]) {\n            acc[statusKey] = [cur]\n        } else {\n            acc[statusKey].push(cur)\n        }\n        return acc;\n    }, {})\n)\n\n\n\nexport const getFilteredSenators = (allSenators, filterKey, filterValue) => {\n    if (filterKey && filterValue) {\n        return filter(allSenators, (senator) => {\n            return senator[filterKey].toLowerCase() === filterValue.toLowerCase()\n        })\n        \n    }\n    return allSenators;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}