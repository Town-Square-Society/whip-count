{"version":3,"sources":["circle-in-person.svg","utils/setup-firebase.js","App/selectors.js","components/Modal/index.jsx","data/states.js","components/Search/index.jsx","constants/index.js","components/Table/index.jsx","components/ProgressBar/index.jsx","App/IssueCounts.jsx","components/LandingPageCards/index.jsx","App/index.jsx","serviceWorker.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","storageBucket","messagingSenderId","projectId","firestore","firebasedb","database","getSelectedIssueData","trackedIssues","issue","find","id","getCurrentIssueStatusToTextMap","issueData","statusText","reduce","acc","status","index","array","getStatusDisplay","statusDisplay","length","push","value","text","Meta","SenatorModal","senator","visible","closeModal","townHalls","selectedIssue","issues","width","title","displayName","party","state","onOk","onCancel","footer","className","style","maxWidth","bordered","cover","alt","src","govtrack_id","description","citation","target","rel","href","renderCitation","actions","socials","facebook","FacebookOutlined","twitter","TwitterOutlined","url","LinkOutlined","contact","address","phone","column","size","map","Item","label","name","key","itemLayout","dataSource","renderItem","item","extra","link","linkName","eventId","eventName","meetingType","Time","dateString","townHallsDisplay","Option","statesMap","AL","AK","AS","AZ","AR","CA","CO","CT","DE","DC","FM","FL","GA","GU","HI","ID","IL","IN","IA","KS","KY","LA","ME","MH","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","MP","OH","OK","OR","PW","PA","PR","RI","SC","SD","TN","TX","UT","VT","VI","VA","WA","WV","WI","WY","stateName","abr","Search","senators","selectSenator","handleStateSearch","handleReset","showSearch","allowClear","showArrow","suffixIcon","SearchOutlined","placeholder","optionFilterProp","onChange","states","includes","onFocus","onBlur","onSearch","val","onClear","filterOption","input","option","children","toLowerCase","indexOf","senatorOrState","STATUS_COLORS","1","2","3","4","5","STATUS_COLORS_PROGRESS","Column","makeSortFunction","a","b","SenateTable","props","getSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","ref","node","searchInput","e","onPressEnter","handleSearch","marginBottom","display","type","onClick","icon","filterIcon","filtered","color","undefined","onFilter","record","toString","onFilterDropdownVisibleChange","setTimeout","select","render","searchedColumn","highlightStyle","backgroundColor","searchWords","searchText","autoEscape","textToHighlight","windowWidth","this","setState","window","innerWidth","addEventListener","height","rowKey","pagination","sticky","scroll","x","y","sorter","searchedSenator","responsive","filters","Number","statusNo","openModal","React","Component","ProgressBar","senateMapByStatus","markerPosition","flexBasis","background","pos","top","opacity","classNames","left","tooltipPlacement","IssueCounts","componentDidMount","getTableHight","statusContainer","document","getElementsByClassName","progressBar","tableHeader","scrollHeight","tableHeight","innerHeight","setTableHeight","filteredSenators","shortStatusText","flex","placement","join","preview","fallback","circleInPerson","gutter","LandingPageCards","setIssue","justify","align","span","bodyStyle","hoverable","aboutLink","aboutLinkText","header","Header","Content","Footer","formatParty","console","log","App","modalSenator","contentHeight","once","then","snapshot","forEach","collection","get","data","active","location","hash","split","history","replaceState","sort","getContentHeight","titleBar","issueKey","clearIssue","pushState","renderModal","thisTownhalls","filter","officePersonId","scrollTo","options","row","querySelector","scrollIntoView","allSenators","selectedStatus","cur","statusKey","filterKey","filterValue","getFilteredSenators","ghost","ArrowLeftOutlined","reverse","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MC/GIwD,E,IAAAA,OACFC,EAAYnB,cDRM,CACpBoB,GAAI,UACJC,GAAI,SACJC,GAAI,iBACJC,GAAI,UACJC,GAAI,WACJC,GAAI,aACJC,GAAI,WACJC,GAAI,cACJC,GAAI,WACJC,GAAI,uBACJC,GAAI,iCACJC,GAAI,UACJC,GAAI,UACJC,GAAI,OACJC,GAAI,SACJC,GAAI,QACJC,GAAI,WACJC,GAAI,UACJC,GAAI,OACJC,GAAI,SACJC,GAAI,WACJC,GAAI,YACJC,GAAI,QACJC,GAAI,mBACJC,GAAI,WACJC,GAAI,gBACJC,GAAI,WACJC,GAAI,YACJC,GAAI,cACJC,GAAI,WACJC,GAAI,UACJC,GAAI,WACJC,GAAI,SACJC,GAAI,gBACJC,GAAI,aACJC,GAAI,aACJC,GAAI,WACJC,GAAI,iBACJC,GAAI,eACJC,GAAI,2BACJC,GAAI,OACJC,GAAI,WACJC,GAAI,SACJC,GAAI,QACJC,GAAI,eACJC,GAAI,cACJC,GAAI,eACJC,GAAI,iBACJC,GAAI,eACJC,GAAI,YACJC,GAAI,QACJC,GAAI,OACJC,GAAI,UACJC,GAAI,iBACJC,GAAI,WACJC,GAAI,aACJC,GAAI,gBACJC,GAAI,YACJC,GAAI,YCnDwB,SAACC,EAAWC,GAAZ,MAAqB,CACnD1I,GAAI0I,EACJjH,YAAagH,MA+DAE,EA5DA,SAAC,GAKT,IAJLC,EAII,EAJJA,SACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,kBACAC,EACI,EADJA,YAwBA,OACE,oCACE,wBAAIhH,UAAU,gBAAd,iCAEA,uBACEiH,YAAU,EACVhH,MAAO,CAAET,MAAO,KAChB0H,YAAU,EACVC,WAAW,EACXC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","file":"static/js/main.86e116fd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/circle-in-person.cd81734f.svg\";","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/database';\n\nconst config = {\n    apiKey: 'AIzaSyDwZ41RWIytGELNBnVpDr7Y_k1ox2F2Heg',\n    authDomain: 'townhallproject-86312.firebaseapp.com',\n    databaseURL: 'https://townhallproject-86312.firebaseio.com',\n    storageBucket: 'townhallproject-86312.appspot.com',\n    messagingSenderId: '208752196071',\n    projectId: 'townhallproject-86312',\n};\n\n// const config = {\n//     apiKey: 'AIzaSyCJncx2G6bUnecl4H2VHSBTDfRRxg7H5Fs',\n//     authDomain: 'townhalltestingsms.firebaseapp.com',\n//     databaseURL: 'https://townhalltestingsms.firebaseio.com',\n//     storageBucket: 'townhalltestingsms.appspot.com',\n//     messagingSenderId: '86976100332',\n//     projectId: 'townhalltestingsms',\n// };\n\nfirebase.initializeApp(config);\nconst firestore = firebase.firestore();\nconst firebasedb = firebase.database();\n\nexport {\n    firebase,\n    firebasedb,\n    firestore\n};","import {\n    filter,\n    find\n} from \"lodash\";\n\nexport const getSenatorsByStatus = (allSenators, selectedStatus) => {\n    if (!selectedStatus) {\n        return {}\n    }\n\n    return allSenators.reduce((acc, cur) => {\n        const statusKey = cur.issues[selectedStatus].status\n        if (!acc[statusKey]) {\n            acc[statusKey] = [cur]\n        } else {\n            acc[statusKey].push(cur)\n        }\n        return acc;\n    }, {})\n}\n\nexport const getSelectedIssueData = (trackedIssues, issue) => {\n        if (!issue) {\n            return {}\n        }\n        const issueData = find(trackedIssues, {\n            id: issue\n        });\n        return issueData || {}\n    }\n\n\nexport const getCurrentIssueStatusToTextMap = (trackedIssues, issue) => {\n\n    const issueData = getSelectedIssueData(trackedIssues, issue);\n    if (!issueData.statusText) {\n        return {}\n    }\n\n    return issueData.statusText.reduce((acc, status, index, array) => {\n        acc[index + 1] = status;\n        return acc;\n    }, {})\n}\n\nexport const getStatusDisplay = (trackedIssues, issue) => {\n    const statusText = getCurrentIssueStatusToTextMap(trackedIssues, issue)\n    const statusDisplay = [];\n    for (let index = 0; index < trackedIssues.length; index++) {\n        if (statusText[index + 1]) {\n\n            statusDisplay.push({\n                value: index + 1,\n                text: statusText[index + 1]\n            })\n        }\n        \n    }\n    return statusDisplay\n\n}\n\nexport const getFilteredSenators = (allSenators, filterKey, filterValue) => {\n    if (filterKey && filterValue) {\n        return filter(allSenators, (senator) => {\n            return senator[filterKey].toLowerCase() === filterValue.toLowerCase()\n        })\n\n    }\n    return allSenators;\n}","import React from \"react\";\nimport { Modal, Card, List, Descriptions } from \"antd\";\nimport {\n  FacebookOutlined,\n  TwitterOutlined,\n  LinkOutlined,\n} from \"@ant-design/icons\";\nimport \"./style.css\";\nimport { getCurrentIssueStatusToTextMap } from \"../../App/selectors\";\n\nconst { Meta } = Card;\n\nconst townHallsDisplay = (townHalls) => (\n  <Card title=\"Attend an event\">\n    <List\n      itemLayout=\"vertical\"\n      dataSource={townHalls}\n      renderItem={(item) => {\n        return (\n          <List.Item\n            extra={\n              item.link ? (\n                <a href={item.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                  {item.linkName || \"More info\"}\n                </a>\n              ) : (\n                []\n              )\n            }\n          >\n            <List.Item.Meta\n              title={\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={`https://townhallproject.com/${item.eventId}`}\n                >\n                  {item.eventName}\n                </a>\n              }\n              description={`${item.meetingType} at ${item.Time} on ${item.dateString}`}\n            />\n          </List.Item>\n        );\n      }}\n    />\n  </Card>\n);\n\nconst renderCitation = (senator, selectedIssue) => {\n  const citation = senator.issues[selectedIssue].citation\n  return (\n    <>\n      {citation && (\n        <p className=\"quote-citation\">\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href={citation}>\n            Link to citation\n          </a>\n        </p>\n      )}\n    </>\n  );\n};\n\nconst SenatorModal = ({\n  senator,\n  visible,\n  closeModal,\n  townHalls,\n  selectedIssue,\n  trackedIssues\n}) => {\n  let status = \"all\";\n  if (selectedIssue) {\n\n    status = senator.issues[selectedIssue].status;\n  }\n  \n  return (\n    <>\n      <Modal\n        width={\"80%\"}\n        title={`Senator ${senator.displayName} (${senator.party[0]}) ${senator.state}`}\n        visible={visible}\n        onOk={closeModal}\n        onCancel={closeModal}\n        footer={null}\n        className=\"modal\"\n      >\n        <div className=\"modal-row\">\n          <div className=\"left-container modal-col\">\n            <Card\n              style={{ maxWidth: 200 }}\n              bordered={false}\n              className={`status__${status} photo-card`}\n              cover={\n                <img\n                  alt=\"example\"\n                  src={`https://www.govtrack.us/static/legislator-photos/${senator.govtrack_id}-200px.jpeg`}\n                />\n              }\n            >\n              {selectedIssue && (\n                <Meta\n                  description={`Position: ${\n                    getCurrentIssueStatusToTextMap(\n                      trackedIssues,\n                      selectedIssue\n                    )[senator.issues[selectedIssue].status]\n                  }`}\n                />\n              )}\n            </Card>\n          </div>\n          <div className=\"right-container modal-col\">\n            {renderCitation(senator, selectedIssue)}\n            <Card\n              title=\"Contact:\"\n              actions={[\n                senator.socials.facebook && (\n                  <a\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href={`https://facebook.com/${senator.socials.facebook}`}\n                  >\n                    <FacebookOutlined />\n                  </a>\n                ),\n                senator.socials.twitter && (\n                  <a\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href={`https://twitter.com/${senator.socials.twitter}`}\n                  >\n                    <TwitterOutlined />\n                  </a>\n                ),\n                senator.socials.url && (\n                  <a\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href={senator.socials.url}\n                  >\n                    <LinkOutlined />\n                  </a>\n                ),\n              ]}\n            >\n              <p>{senator.contact.address}</p>\n              <p>{senator.contact.phone}</p>\n            </Card>\n            {!selectedIssue && (\n              <Card>\n                <Descriptions bordered column={1} size=\"small\">\n                  {trackedIssues.map((issue) => (\n                    <Descriptions.Item label={issue.name} key={issue.name}>\n                      {\n                        getCurrentIssueStatusToTextMap(trackedIssues, issue.id)[\n                          senator.issues[issue.id].status\n                        ]\n                      }\n                    </Descriptions.Item>\n                  ))}\n                </Descriptions>\n              </Card>\n            )}\n\n            {townHalls.length > 0 && townHallsDisplay(townHalls)}\n          </div>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default SenatorModal;\n","export const statesAb = {\n    AL: \"Alabama\",\n    AK: \"Alaska\",\n    AS: \"American Samoa\",\n    AZ: \"Arizona\",\n    AR: \"Arkansas\",\n    CA: \"California\",\n    CO: \"Colorado\",\n    CT: \"Connecticut\",\n    DE: \"Delaware\",\n    DC: \"District Of Columbia\",\n    FM: \"Federated States Of Micronesia\",\n    FL: \"Florida\",\n    GA: \"Georgia\",\n    GU: \"Guam\",\n    HI: \"Hawaii\",\n    ID: \"Idaho\",\n    IL: \"Illinois\",\n    IN: \"Indiana\",\n    IA: \"Iowa\",\n    KS: \"Kansas\",\n    KY: \"Kentucky\",\n    LA: \"Louisiana\",\n    ME: \"Maine\",\n    MH: \"Marshall Islands\",\n    MD: \"Maryland\",\n    MA: \"Massachusetts\",\n    MI: \"Michigan\",\n    MN: \"Minnesota\",\n    MS: \"Mississippi\",\n    MO: \"Missouri\",\n    MT: \"Montana\",\n    NE: \"Nebraska\",\n    NV: \"Nevada\",\n    NH: \"New Hampshire\",\n    NJ: \"New Jersey\",\n    NM: \"New Mexico\",\n    NY: \"New York\",\n    NC: \"North Carolina\",\n    ND: \"North Dakota\",\n    MP: \"Northern Mariana Islands\",\n    OH: \"Ohio\",\n    OK: \"Oklahoma\",\n    OR: \"Oregon\",\n    PW: \"Palau\",\n    PA: \"Pennsylvania\",\n    PR: \"Puerto Rico\",\n    RI: \"Rhode Island\",\n    SC: \"South Carolina\",\n    SD: \"South Dakota\",\n    TN: \"Tennessee\",\n    TX: \"Texas\",\n    UT: \"Utah\",\n    VT: \"Vermont\",\n    VI: \"Virgin Islands\",\n    VA: \"Virginia\",\n    WA: \"Washington\",\n    WV: \"West Virginia\",\n    WI: \"Wisconsin\",\n    WY: \"Wyoming\"\n}\n\nexport default [\n    \"AK\",\n    \"AL\",\n    \"AR\",\n    \"AS\",\n    \"AZ\",\n    \"CA\",\n    \"CO\",\n    \"CT\",\n    \"DC\",\n    \"DE\",\n    \"FL\",\n    \"GA\",\n    \"GU\",\n    \"HI\",\n    \"IA\",\n    \"ID\",\n    \"IL\",\n    \"IN\",\n    \"KS\",\n    \"KY\",\n    \"LA\",\n    \"MA\",\n    \"MD\",\n    \"ME\",\n    \"MI\",\n    \"MN\",\n    \"MO\",\n    \"MP\",\n    \"MS\",\n    \"MT\",\n    \"NC\",\n    \"ND\",\n    \"NE\",\n    \"NH\",\n    \"NJ\",\n    \"NM\",\n    \"NV\",\n    \"NY\",\n    \"OH\",\n    \"OK\",\n    \"OR\",\n    \"PA\",\n    \"PR\",\n    \"RI\",\n    \"SC\",\n    \"SD\",\n    \"TN\",\n    \"TX\",\n    \"UT\",\n    \"VA\",\n    \"VI\",\n    \"VT\",\n    \"WA\",\n    \"WI\",\n    \"WV\",\n    \"WY\",\n];\n","import React from \"react\";\nimport { Select } from \"antd\";\nimport { find, map } from \"lodash\";\nimport { SearchOutlined } from \"@ant-design/icons\";\n\nimport states, { statesAb } from \"../../data/states\";\n\nconst { Option } = Select;\nconst statesMap = map(statesAb, (stateName, abr) => ({\n  id: abr,\n  displayName: stateName,\n}));\n\nconst Search = ({\n  senators,\n  selectSenator,\n  handleStateSearch,\n  handleReset,\n}) => {\n  function onChange(value) {\n    const isState = states.includes(value);\n    if (isState) {\n      handleStateSearch(value);\n    }\n    const senator = find(senators, { id: value });\n    if (senator) {\n      selectSenator(senator);\n    }\n  }\n\n  function onBlur() {\n    //   console.log('blur');\n  }\n\n  function onFocus() {\n    //   console.log('focus');\n  }\n\n  function onSearch(val) {\n    //   console.log('search:', val);\n  }\n  return (\n    <>\n      <h4 className=\"search-label\">Where do your Senators stand?</h4>\n\n      <Select\n        showSearch\n        style={{ width: 300 }}\n        allowClear\n        showArrow={false}\n        suffixIcon={<SearchOutlined />}\n        placeholder=\"Search Senator's name\"\n        optionFilterProp=\"children\"\n        onChange={onChange}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        onSearch={onSearch}\n        onClear={handleReset}\n        filterOption={(input, option) => {\n          return (\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0 ||\n            option.value.toLowerCase().indexOf(input.toLowerCase()) >= 0\n          );\n        }}\n      >\n        {[...senators, ...statesMap].map((senatorOrState) => (\n          <Option key={senatorOrState.id}>{senatorOrState.displayName}</Option>\n        ))}\n      </Select>\n    </>\n  );\n};\n\nexport default Search;\n","const DARK_PURPLE = \"#542788\"\nconst MED_PURPLE = \"#998ec3\"\n// const LIGHT_PURPLE = \"#c8afdf\";\nconst GRAY = \"#c3c3c3\"\n// const LIGHT_ORANGE = \"#fee0b6\"\nconst MED_ORANGE = \"#f1a340\"\nconst DARK_ORANGE = \"#e66101\"\n\nexport const STATUS_COLORS = {\n    1: DARK_PURPLE,\n    2: MED_PURPLE,\n    3: GRAY,\n    4: MED_ORANGE,\n    5: DARK_ORANGE,\n}\n\nexport const STATUS_COLORS_PROGRESS = {\n    1: DARK_PURPLE,\n    2: MED_PURPLE,\n    3: GRAY,\n    4: MED_ORANGE,\n    5: DARK_ORANGE,\n}\n","import React from \"react\";\nimport { Table, Button, Tag, Input, Space } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport Highlighter from \"react-highlight-words\";\n\nimport { STATUS_COLORS } from \"../../constants\";\nimport \"./style.css\";\nimport { getStatusDisplay, getCurrentIssueStatusToTextMap } from \"../../App/selectors\";\n\nconst { Column } = Table;\nexport const makeSortFunction = (key) => {\n  return (a, b) => {\n    if (a[key] > b[key]) {\n      return 1;\n    }\n    if (a[key] < b[key]) {\n      return -1;\n    }\n    return 0;\n  };\n};\n\nconst MD_BREAKPOINT = 768;\n\nclass SenateTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      windowWidth: 0,\n    };\n  }\n  componentDidMount() {\n    this.setState({ windowWidth: window.innerWidth });\n    window.addEventListener(\"resize\", () => {\n      this.setState({ windowWidth: window.innerWidth });\n    });\n  }\n  getSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node) => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() =>\n            this.props.handleSearch(selectedKeys, confirm, dataIndex)\n          }\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() =>\n              this.props.handleSearch(selectedKeys, confirm, dataIndex)\n            }\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button\n            onClick={() => this.props.handleReset(clearFilters)}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex]\n            .toString()\n            .toLowerCase()\n            .includes(value.toLowerCase())\n        : \"\",\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select(), 100);\n      }\n    },\n    render: (text) =>\n      this.props.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n          searchWords={[this.props.searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : \"\"}\n        />\n      ) : (\n        text\n      ),\n  });\n  render() {\n    const { senators, height, selectedIssue, trackedIssues } = this.props;\n    return (\n      <Table\n        dataSource={senators}\n        rowKey=\"id\"\n        pagination={false}\n        sticky\n        scroll={{\n          x: true,\n          y: height || \"60vh\",\n        }}\n      >\n        <Column\n          title=\"Name\"\n          dataIndex=\"displayName\"\n          key=\"displayName\"\n          sorter={makeSortFunction(\"last_name\")}\n          render={(text, record) => {\n            const name =\n              this.state.windowWidth < MD_BREAKPOINT\n                ? `${record.displayName} (${record.party[0]}) ${record.state}`\n                : text;\n            return this.props.searchedSenator === text ? (\n              <Highlighter\n                highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n                searchWords={[this.props.searchedSenator]}\n                autoEscape\n                textToHighlight={name ? text.toString() : \"\"}\n              />\n            ) : (\n              name\n            );\n          }}\n        />\n        <Column\n          {...this.getSearchProps(\"state\")}\n          title=\"State\"\n          dataIndex=\"state\"\n          width={100}\n          key=\"state\"\n          sorter={makeSortFunction(\"state\")}\n          responsive={[\"md\"]}\n        />\n        <Column\n          title=\"Party\"\n          dataIndex=\"party\"\n          key=\"party\"\n          sorter={makeSortFunction(\"party\")}\n          responsive={[\"md\"]}\n        />\n        <Column\n          title=\"Position\"\n          dataIndex={[\"issues\", selectedIssue, \"status\"]}\n          key={selectedIssue}\n          filters={getStatusDisplay(trackedIssues, selectedIssue)}\n          onFilter={(value, record) => {\n            return record.issues[selectedIssue].status.includes(value);\n          }}\n          sorter={\n             (a, b) =>\n              Number(b.issues[selectedIssue].status) -\n              Number(a.issues[selectedIssue].status)\n          \n          }\n          render={(statusNo) => {\n            return (\n              <Tag color={STATUS_COLORS[statusNo]} key={statusNo}>\n                {\n                  getCurrentIssueStatusToTextMap(trackedIssues, selectedIssue)[\n                    statusNo\n                  ]\n                }\n              </Tag>\n            );\n          }}\n        />\n        <Column\n          title=\"See More\"\n          key=\"see-more\"\n          render={(record) => {\n            return (\n              <>\n                <Button onClick={() => this.props.openModal(record)}>\n                  Details\n                </Button>\n              </>\n            );\n          }}\n        />\n      </Table>\n    );\n  }\n}\n\nexport default SenateTable;\n","import React from \"react\";\nimport { map } from \"lodash\";\nimport classNames from \"classnames\";\nimport { Tooltip } from \"antd\";\n\nimport { STATUS_COLORS_PROGRESS } from \"../../constants\";\n\nimport \"./style.css\";\n\nconst ProgressBar = ({ senateMapByStatus, markerPosition }) => (\n  <div className=\"progress-bar-container\">\n    <div className=\"progress-bar\">\n      {map(senateMapByStatus, (senators, status) => {\n        return (\n          <div\n            key={`progress-${status}`}\n            style={{\n              flexBasis: `${senators.length}%`,\n              background: STATUS_COLORS_PROGRESS[status],\n              height: 20,\n              color: \"white\",\n            }}\n          >\n            {senators.length}\n          </div>\n        );\n      })}\n    </div>\n    {markerPosition.map((pos, index) => {\n      const top = (index + 1) * -22 - index;\n      const opacity = 1 - index / 2;\n      return (\n        <Tooltip title={pos}>\n          <div\n            className={classNames(\"overlay-marker\")}\n            style={{ left: `${pos}%`, top: `${top}px`, opacity }}\n          ></div>\n        </Tooltip>\n      );\n    })}\n  </div>\n);\n\nexport default ProgressBar;\n","import React, { Component } from 'react';\nimport { Col, Row, Tooltip, Image } from \"antd\";\nimport { map } from \"lodash\";\n\n\nimport './style.css';\nimport SenateTable from '../components/Table';\n\nimport circleInPerson from '../circle-in-person.svg'\nimport ProgressBar from '../components/ProgressBar';\nimport { getCurrentIssueStatusToTextMap } from \"./selectors\";\n\n\nconst tooltipPlacement = {\n  1: \"right\",\n  2: \"top\",\n  3: \"top\",\n  4: \"left\"\n}\n\n\nclass IssueCounts extends Component {\n\n\n  componentDidMount = () => {\n    \n        this.getTableHight();\n\n \n      window.addEventListener(\"resize\", () => this.getTableHight());\n  };\n\n  handleStateSearch = (value) => {\n    this.setState({\n      searchText: value,\n      searchedColumn: \"state\",\n    });\n  };\n\n  getTableHight = () => {\n    const statusContainer = document.getElementsByClassName(\"all-status-container\");\n    const footer = document.getElementsByClassName(\"ant-layout-footer\");\n    const progressBar = document.getElementsByClassName(\n      \"progress-bar-container\"\n    );\n    const tableHeader = document.getElementsByClassName(\"ant-table-thead\");\n    if (statusContainer[0] && progressBar[0] && tableHeader[0] && footer[0]) {\n      const height =\n        statusContainer[0].scrollHeight +\n        progressBar[0].scrollHeight +\n        footer[0].scrollHeight +\n        tableHeader[0].scrollHeight;\n      const windowHeight = window.innerHeight;\n      const tableHeight = windowHeight - height;\n      this.props.setTableHeight( tableHeight );\n    }\n  }\n\n\n\n  selectSenator = (senator) => {\n    this.props.selectSenator(senator)\n  };\n\n \n\n  render() {\n    const {\n      senateMapByStatus,\n      filteredSenators,\n      selectedIssue,\n      trackedIssues,\n    } = this.props;\n    const shortStatusText = getCurrentIssueStatusToTextMap(\n      trackedIssues,\n      selectedIssue\n    );\n    \n    return (\n      <>\n        <Row className=\"all-status-container\">\n          {map(senateMapByStatus, (senators, statusNo) => {\n            return (\n              <Col\n                key={statusNo}\n                flex={\"1 1 auto\"}\n                className={`status-col status__${statusNo}`}\n              >\n                <h3>{`${shortStatusText[statusNo]} (${senators.length})`}</h3>\n                <div className=\"status-container\">\n                  {map(senators, (senator) => (\n                    <Tooltip\n                      key={senator.id}\n                      placement={tooltipPlacement[statusNo]}\n                      title={`Sen. ${senator.displayName} (${senator.party[0]}) ${senator.state}`}\n                    >\n                      <div\n                        className={[\n                          \"image-container\",\n                          senator.party.toLowerCase(),\n                        ].join(\" \")}\n                        onClick={() => this.selectSenator(senator)}\n                      >\n                        <Image\n                          preview={false}\n                          alt={senator.displayName}\n                          fallback={circleInPerson}\n                          src={`https://www.govtrack.us/static/legislator-photos/${senator.govtrack_id}-100px.jpeg`}\n                        />\n                      </div>\n                    </Tooltip>\n                  ))}\n                </div>\n              </Col>\n            );\n          })}\n        </Row>\n        {senateMapByStatus[1] && (\n          <ProgressBar senateMapByStatus={senateMapByStatus} markerPosition={[50,60]}/>\n        )}\n        <Row className=\"table-container\" gutter={16}>\n          <SenateTable\n            senators={filteredSenators}\n            handleSearch={this.props.handleSearch}\n            handleReset={this.props.handleReset}\n            searchedColumn={this.props.searchedColumn}\n            searchText={this.props.searchText}\n            openModal={this.props.openModal}\n            searchedSenator={this.props.searchedSenator}\n            height={this.props.tableHeight}\n            getTableHight={this.getTableHight}\n            selectedIssue={selectedIssue}\n            trackedIssues={trackedIssues}\n          />\n        </Row>\n      </>\n    );\n  }\n}\n\n\nexport default IssueCounts;\n","import React from \"react\";\nimport { Card, Row, Col } from \"antd\";\nimport { LinkOutlined } from \"@ant-design/icons\";\n\nimport \"./style.css\";\n\nconst LandingPageCards = ({ setIssue, trackedIssues }) => (\n  <div className=\"landing-page\">\n    <Row\n      gutter={[16, 16]}\n      justify=\"space-evenly\"\n      align=\"stretch\"\n      className=\"cards-row\"\n    >\n      {trackedIssues.map((issue) => (\n        <Col span={8} key={issue.id}>\n          <Card\n            bodyStyle={{ padding: 0 }}\n            hoverable\n            className=\"issue-card\"\n            actions={[\n              <a\n                href={issue.aboutLink}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {issue.aboutLinkText} <LinkOutlined />\n              </a>,\n            ]}\n          >\n            <a href={`#${issue.id}`}>\n              <Card.Meta\n                title={issue.header}\n                onClick={() => setIssue(issue.id)}\n                description={issue.description}\n                style={{ padding: 20 }}\n              />\n            </a>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n  </div>\n);\n\nexport default LandingPageCards;\n","import React, { Component } from 'react';\nimport { Layout, Button, Col, Row } from \"antd\";\nimport { find, filter, reverse } from \"lodash\";\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\nimport classNames from \"classnames\";\n\nimport { firestore, firebasedb } from '../utils/setup-firebase';\nimport {\n  getFilteredSenators,\n  getSenatorsByStatus,\n  getSelectedIssueData,\n} from \"./selectors\";\nimport SenatorModal from \"../components/Modal\";\nimport Search from \"../components/Search\";\nimport './style.css';\nimport { makeSortFunction } from '../components/Table';\n\nimport IssueCounts from './IssueCounts';\nimport LandingPageCards from '../components/LandingPageCards';\n\nconst { Header, Content, Footer } = Layout;\n\nconst formatParty = (party) => {\n  if (!party) {\n    return console.log('no party')\n  }\n  if (party.length > 1) {\n    return party\n  }\n  switch (party) {\n    case 'D':\n      return 'Democratic'\n      case 'R':\n        return 'Republican'\n      default: \n        return 'Independent'\n  }\n\n}\nclass App extends Component {\n  state = {\n    senators: [],\n    trackedIssues: [],\n    modalSenator: null,\n    searchText: \"\",\n    searchedColumn: \"\",\n    selectedIssue: \"\",\n    tableHeight: 0,\n    contentHeight: 0,\n  };\n\n  componentDidMount = () => {\n\n\n    firebasedb\n      .ref(\"townHalls\")\n      .once(\"value\")\n      .then((snapshot) => {\n        const townHalls = [];\n        snapshot.forEach((node) => {\n          townHalls.push(node.val());\n        });\n        this.setState({ townHalls });\n      });\n    const trackedIssues = [];\n    firestore.collection(\"whip_count_metadata\")\n      .get()\n      .then(snapshot => {\n        snapshot.forEach(node => {\n          const data = {\n            ...node.data()\n          }\n          if (data.active) {\n\n            trackedIssues.push(data)\n          }\n        })\n      }).then(() => {\n            if (window.location.hash) {\n              const issue = find(trackedIssues, {\n                id: window.location.hash.split(\"#\")[1],\n              });\n              if (issue) {\n                this.setIssue(issue.id);\n              } else {\n                window.history.replaceState({}, \"\", \"/\");\n              }\n            }\n        firestore\n          .collection(\"whip_count_2020\")\n          .get()\n          .then((snapshot) => {\n            const senators = [];\n            snapshot.forEach((node) => {\n              const data = {\n                ...node.data(),\n                id: node.id,\n                party: node.data().party\n                  ? formatParty(node.data().party)\n                  : console.log(node.data().displayName),\n              };\n              senators.push(data);\n            });\n            senators.sort(makeSortFunction(\"state\"));\n            this.setState({ senators, trackedIssues });\n          });\n      })\n      this.getContentHeight();\n      window.addEventListener(\"resize\", () => this.getContentHeight());\n\n  };\n\n  getContentHeight = () => {\n    const titleBar = document.getElementsByClassName(\n      \"title-bar\"\n    );\n    const footer = document.getElementsByClassName(\"ant-layout-footer\");\n\n    const header = document.getElementsByClassName(\"ant-layout-header\");\n    if (titleBar[0] && header[0] && footer[0]) {\n      const height =\n        titleBar[0].scrollHeight +\n        header[0].scrollHeight +\n        footer[0].scrollHeight\n      const windowHeight = window.innerHeight;\n      const contentHeight = windowHeight - height -40;\n      this.setState({ contentHeight })\n    }\n  };\n\n  handleStateSearch = (value) => {\n    this.setState({\n      searchText: value,\n      searchedColumn: \"state\",\n    });\n  };\n\n  setTableHeight = (tableHeight) => {\n    this.setState({ tableHeight });\n  };\n\n  setIssue = (issueKey) => {\n    this.setState({ selectedIssue: issueKey });\n  };\n\n  clearIssue = () => {\n    window.history.pushState({}, \"\", \"/\")\n    this.setState({ selectedIssue: \"\" });\n  };\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = (clearFilters) => {\n    if (clearFilters) {\n      clearFilters();\n    }\n    this.setState({ searchText: \"\", searchedSenator: \"\" });\n  };\n\n  renderModal = () => {\n    const { modalSenator, townHalls } = this.state;\n    if (!modalSenator) {\n      return null;\n    }\n    const thisTownhalls = filter(townHalls, {\n      officePersonId: modalSenator.id,\n    });\n    return (\n      <SenatorModal\n        visible={true}\n        senator={modalSenator}\n        townHalls={thisTownhalls}\n        closeModal={this.closeModal}\n        selectedIssue={this.state.selectedIssue}\n        trackedIssues={this.state.trackedIssues}\n      />\n    );\n  };\n\n  scrollTo = (id, options) => {\n    const row = document.querySelector(`[data-row-key=\"${id}\"]`);\n    if (row) {\n      row.scrollIntoView(options);\n    }\n  };\n\n  openModal = (senator) => {\n    this.setState({ modalSenator: senator });\n  };\n\n  selectSenator = (senator) => {\n    this.scrollTo(senator.id);\n    this.openModal(senator);\n    this.setState({\n      searchedSenator: senator.displayName,\n    });\n  };\n\n  closeModal = () => {\n    this.setState({ modalSenator: null });\n  };\n\n  render() {\n    const { selectedIssue } = this.state;\n    const senateMapByStatus = getSenatorsByStatus(\n      this.state.senators,\n      selectedIssue\n    );\n    const filteredSenators = getFilteredSenators(\n      this.state.senators,\n      this.state.searchedColumn,\n      this.state.searchText\n    );\n    return (\n      <Layout className=\"App\">\n        <div\n          className={classNames([\n            \"title-bar\",\n            { \"has-back-button\": !!selectedIssue },\n          ])}\n        >\n          {selectedIssue ? (\n            <Row align=\"middle\">\n              <Col span={6}>\n                <Button\n                  ghost={true}\n                  onClick={this.clearIssue}\n                  icon={<ArrowLeftOutlined />}\n                >\n                  Back to all issues\n                </Button>\n              </Col>\n              <Col span={12}>\n                <h1>{getSelectedIssueData(this.state.trackedIssues, selectedIssue).name}</h1>\n              </Col>\n            </Row>\n          ) : (\n            <h1>People's Whip Count</h1>\n          )}\n        </div>\n        <Header>\n          <Search\n            handleStateSearch={this.handleStateSearch}\n            senators={this.state.senators}\n            selectSenator={this.selectSenator}\n            handleReset={this.handleReset}\n          />\n          {this.renderModal()}\n\n          <Button\n            ghost\n            target=\"_blank\"\n            href=\"https://docs.google.com/forms/d/e/1FAIpQLScH8KYmrnWScWJr1v3jUwMdxP5ekN5x0IZ05Q23J7SxoDoQrw/viewform\"\n          >\n            Submit position update\n          </Button>\n        </Header>\n        <Content className=\"content\">\n          {this.state.selectedIssue ? (\n            <IssueCounts\n              selectSenator={this.selectSenator}\n              senateMapByStatus={senateMapByStatus}\n              filteredSenators={filteredSenators}\n              searchText={this.state.searchText}\n              searchedColumn={this.state.searchedColumn}\n              searchedSenator={this.state.searchedSenator}\n              tableHeight={this.state.tableHeight}\n              setTableHeight={this.setTableHeight}\n              openModal={this.openModal}\n              selectedIssue={this.state.selectedIssue}\n              handleSearch={this.handleSearch}\n              handleReset={this.handleReset}\n              trackedIssues={this.state.trackedIssues}\n            />\n          ) : (\n            <LandingPageCards\n              setIssue={this.setIssue}\n              height={this.state.contentHeight}\n              trackedIssues={reverse(this.state.trackedIssues) || []}\n            />\n          )}\n        </Content>\n        <Footer>\n          <div>\n            <Button href=\"mailto:info@peoplestownhall.org\" type=\"text\">\n              Contact\n            </Button>\n          </div>\n        </Footer>\n      </Layout>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}