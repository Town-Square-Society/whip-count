{"version":3,"sources":["utils/setup-firebase.js","constants/index.js","Modal/index.jsx","Search/index.jsx","App/index.jsx","App/selectors.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","storageBucket","messagingSenderId","projectId","firestore","firebasedb","database","STATUS_TYPES_LIST","STATUS_COLORS","1","2","3","4","STATUS_TYPES","reduce","acc","status","index","array","STATUS_DISPLAY","map","value","text","Meta","SenatorModal","senator","visible","closeModal","townHalls","width","title","displayName","party","onOk","onCancel","footer","className","style","maxWidth","bordered","cover","alt","src","govtrack_id","description","quote","actions","socials","facebook","target","rel","href","FacebookOutlined","twitter","TwitterOutlined","url","LinkOutlined","contact","address","phone","length","itemLayout","dataSource","renderItem","item","console","log","Item","extra","link","linkName","eventId","eventName","meetingType","Time","dateString","townHallsDisplay","Option","Search","senators","selectSenator","states","showSearch","placeholder","optionFilterProp","onChange","find","id","onFocus","onBlur","onSearch","val","filterOption","input","option","children","toLowerCase","indexOf","key","Column","Header","Content","makeSortFunction","a","b","App","state","modalSenator","componentDidMount","ref","once","then","snapshot","forEach","node","push","setState","collection","get","data","sort","scrollTo","options","document","querySelector","scrollIntoView","renderModal","thisTownhalls","filter","officePersonId","openModal","senateMapByStatus","this","cur","statusKey","statusNo","flex","content","join","onClick","behavior","gutter","rowKey","pagination","sticky","scroll","x","y","dataIndex","sorter","filters","onFilter","record","includes","render","color","Component","Boolean","window","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0fa6c3a1.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/database';\n\nconst config = {\n    apiKey: 'AIzaSyDwZ41RWIytGELNBnVpDr7Y_k1ox2F2Heg',\n    authDomain: 'townhallproject-86312.firebaseapp.com',\n    databaseURL: 'https://townhallproject-86312.firebaseio.com',\n    storageBucket: 'townhallproject-86312.appspot.com',\n    messagingSenderId: '208752196071',\n    projectId: 'townhallproject-86312',\n};\n\n// const config = {\n//     apiKey: 'AIzaSyCJncx2G6bUnecl4H2VHSBTDfRRxg7H5Fs',\n//     authDomain: 'townhalltestingsms.firebaseapp.com',\n//     databaseURL: 'https://townhalltestingsms.firebaseio.com',\n//     storageBucket: 'townhalltestingsms.appspot.com',\n//     messagingSenderId: '86976100332',\n//     projectId: 'townhalltestingsms',\n// };\n\nfirebase.initializeApp(config);\nconst firestore = firebase.firestore();\nconst firebasedb = firebase.database();\n\nexport {\n    firebase,\n    firebasedb,\n    firestore\n};","export const STATUS_TYPES_LIST = [\n    \"Do not consider nominee - winner of 2020 Election should choose\",\n    \"Consider nominee but only after Election\", \n    \"Not on record\", \n    \"Consider new nominee\", \n    \"Other status\",\n    \"Unknown\"\n];\n\nexport const STATUS_COLORS = {\n    1: \"#5e3c99\",\n    2: \"#b2abd2\",\n    3: \"#7a7688\",\n    4: \"#e66101\",\n}\n\nexport const STATUS_TYPES = STATUS_TYPES_LIST.reduce((acc, status, index, array) => {\n    acc[index + 1] = status;\n    return acc;\n}, {})\n\nexport const STATUS_DISPLAY = STATUS_TYPES_LIST.map((status, index) => {\n    return {\n        value: index + 1,\n        text: status,\n    }\n})","import React from \"react\";\nimport { Modal, Card, Row, Col, List } from \"antd\";\nimport {\n  FacebookOutlined,\n  TwitterOutlined,\n  LinkOutlined,\n} from \"@ant-design/icons\";\nimport { STATUS_TYPES } from \"../constants\";\nimport \"./style.css\";\n\nconst { Meta } = Card;\n\nconst townHallsDisplay = (townHalls) => (\n  <Card title=\"Attend an event\">\n    <List\n      itemLayout=\"vertical\"\n      dataSource={townHalls}\n      renderItem={(item) => {\n          console.log(item)\n          return (\n            <List.Item\n              extra={\n                item.link\n                  ? (<a href={item.link}>{item.linkName || \"More info\"}</a>)\n                  : []\n              }\n  \n            >\n              <List.Item.Meta\n                title={\n                  <a\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href={`https://townhallproject.com/${item.eventId}`}\n                  >\n                    {item.eventName}\n                  </a>\n                }\n                description={`${item.meetingType} at ${item.Time} on ${item.dateString}`}\n              />\n            </List.Item>\n          );}}\n    />\n  </Card>\n);\n\nconst SenatorModal = ({ senator, visible, closeModal, townHalls }) => (\n  <>\n    <Modal\n      width={\"80%\"}\n      title={`Senator ${senator.displayName} (${senator.party[0]})`}\n      visible={visible}\n      onOk={closeModal}\n      onCancel={closeModal}\n      footer={null}\n    >\n      <div className=\"modal-row\">\n        <div className=\"left-container modal-col\">\n          <Card\n            style={{ maxWidth: 200 }}\n            bordered={false}\n            className={`status__${senator.status}`}\n            cover={\n              <img\n                alt=\"example\"\n                src={`https://www.govtrack.us/static/legislator-photos/${senator.govtrack_id}-200px.jpeg`}\n              />\n            }\n          >\n            <Meta description={`Position: ${STATUS_TYPES[senator.status]}`} />\n          </Card>\n        </div>\n        <div className=\"right-container modal-col\">\n          {senator.quote && <p className=\"quote\">{senator.quote.text}</p>}\n          <Card\n            title=\"Contact the senator:\"\n            actions={[\n              senator.socials.facebook && (\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={`https://facebook.com/${senator.socials.facebook}`}\n                >\n                  <FacebookOutlined />\n                </a>\n              ),\n              senator.socials.twitter && (\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={`https://twitter.com/${senator.socials.twitter}`}\n                >\n                  <TwitterOutlined />\n                </a>\n              ),\n              senator.socials.url && (\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={senator.socials.url}\n                >\n                  <LinkOutlined />\n                </a>\n              ),\n            ]}\n          >\n            <p>{senator.contact.address}</p>\n            <p>{senator.contact.phone}</p>\n          </Card>\n\n          {townHalls.length > 0 && townHallsDisplay(townHalls)}\n        </div>\n      </div>\n    </Modal>\n  </>\n);\n\nexport default SenatorModal;\n","import React from \"react\";\nimport { Select } from 'antd';\nimport { find } from 'lodash';\nconst { Option } = Select;\n\n\nconst Search = ({ senators, states, selectSenator }) => {\n    function onChange(value) {\n      console.log(`selected ${value}`);\n      const senator = find(senators, { id: value});\n      if (senator) {\n\n          selectSenator(senator);\n      }\n    }\n    \n    function onBlur() {\n    //   console.log('blur');\n    }\n    \n    function onFocus() {\n    //   console.log('focus');\n    }\n    \n    function onSearch(val) {\n    //   console.log('search:', val);\n    }\n    return (\n      <Select\n        showSearch\n        style={{ width: 200 }}\n        placeholder=\"Search for your Senator\"\n        optionFilterProp=\"children\"\n        onChange={onChange}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        onSearch={onSearch}\n        filterOption={(input, option) =>\n          option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n        }\n      >\n        {senators.map((senator) => (\n          <Option key={senator.id}>{senator.displayName}</Option>\n        ))}\n      </Select>\n    );}\n\n  export default Search;","import React, { Component } from 'react';\nimport { Col, Row, Table, Popover, Button, Tag, Layout } from \"antd\";\nimport { map, filter } from \"lodash\";\n\nimport { firestore, firebasedb } from '../utils/setup-firebase';\nimport { getSenatorsByStatus } from './selectors';\nimport SenatorModal from \"../Modal\";\nimport Search from \"../Search\";\nimport './style.css';\nimport { STATUS_COLORS, STATUS_DISPLAY, STATUS_TYPES } from '../constants';\n\nconst { Column } = Table;\nconst { Header, Content } = Layout;\n\nconst makeSortFunction = (key) => {\n  return (a, b) => {\n        if (a[key] > b[key]) {\n            return 1;\n          }\n          if (a[key] < b[key]) {\n            return -1;\n          }\n          return 0;\n        }\n\n}\n\nclass App extends Component {\n  state = {\n    senators: [],\n    modalSenator: null,\n  };\n\n  componentDidMount = () => {\n    firebasedb\n      .ref(\"townHalls\")\n      .once(\"value\")\n      .then((snapshot) => {\n        const townHalls = [];\n        snapshot.forEach((node) => {\n          townHalls.push(node.val());\n        });\n        this.setState({ townHalls });\n      });\n    firestore\n      .collection(\"whip_count_2020\")\n      .get()\n      .then((snapshot) => {\n        const senators = [];\n        snapshot.forEach((node) => {\n          const data = {\n            ...node.data(),\n            id: node.id,\n          };\n          senators.push(data);\n        });\n        senators.sort(makeSortFunction(\"state\"));\n        this.setState({ senators });\n      });\n  };\n\n  scrollTo = (id, options) => {\n    console.log(id);\n    const row = document.querySelector(`[data-row-key=\"${id}\"]`);\n    row.scrollIntoView(options);\n  };\n\n  renderModal = () => {\n    const { modalSenator, townHalls } = this.state;\n    if (!modalSenator) {\n      return null;\n    }\n    const thisTownhalls = filter(townHalls, {\n      officePersonId: modalSenator.id,\n    });\n    return (\n      <SenatorModal\n        visible={true}\n        senator={modalSenator}\n        townHalls={thisTownhalls}\n        closeModal={this.closeModal}\n      />\n    );\n  };\n\n  selectSenator = (senator) => {\n    this.scrollTo(senator.id);\n\n      this.openModal(senator)\n   \n  }\n\n  openModal = (senator) => {\n    this.setState({ modalSenator: senator });\n  };\n\n  closeModal = () => {\n    this.setState({ modalSenator: null });\n  };\n\n  render() {\n    const senateMapByStatus = getSenatorsByStatus(this.state.senators);\n    return (\n      <Layout className=\"App\">\n          <Header>\n          <Search senators={this.state.senators} selectSenator={this.selectSenator} />\n          </Header>\n        <Content className=\"team\">\n          <Row className=\"all-status-container\">\n            {map(senateMapByStatus, (senators, statusNo) => {\n              return (\n                <Col\n                  key={statusNo}\n                  flex={\"1 1 auto\"}\n                  className={`status-col status__${statusNo}`}\n                >\n                  <h3>{`${STATUS_TYPES[statusNo]} (${senators.length})`}</h3>\n                  <div className=\"status-container\">\n                    {map(senators, (senator) => (\n                      <Popover\n                        key={senator.id}\n                        content={\n                          <p>\n                            {senator.party} {senator.state}\n                          </p>\n                        }\n                        title={`Sen. ${senator.displayName}`}\n                      >\n                        <div\n                          className={[\n                            \"image-container\",\n                            senator.party.toLowerCase(),\n                          ].join(\" \")}\n                          onClick={() =>\n                            this.scrollTo(senator.id, { behavior: \"smooth\" })\n                          }\n                        >\n                          <img\n                            width={200}\n                            src={`https://www.govtrack.us/static/legislator-photos/${senator.govtrack_id}-100px.jpeg`}\n                          />\n                        </div>\n                      </Popover>\n                    ))}\n                  </div>\n                </Col>\n              );\n            })}\n          </Row>\n          <Row className=\"table-container\" gutter={16}>\n            <Table\n              dataSource={this.state.senators}\n              rowKey=\"id\"\n              pagination={false}\n              sticky\n              scroll={{\n                x: true,\n                y: \"60vh\",\n              }}\n            >\n              <Column\n                title=\"First Name\"\n                dataIndex=\"first_name\"\n                key=\"first_name\"\n              />\n              <Column\n                title=\"Last Name\"\n                dataIndex=\"last_name\"\n                key=\"last_name\"\n                sorter={makeSortFunction(\"last_name\")}\n              />\n              <Column\n                title=\"State\"\n                dataIndex=\"state\"\n                key=\"state\"\n                sorter={makeSortFunction(\"state\")}\n              />\n              <Column\n                title=\"Party\"\n                dataIndex=\"party\"\n                key=\"party\"\n                sorter={makeSortFunction(\"party\")}\n              />\n              <Column\n                title=\"Status\"\n                dataIndex=\"status\"\n                key=\"status\"\n                filters={STATUS_DISPLAY}\n                onFilter={(value, record) => {\n                  console.log(record, value);\n                  return record.status.includes(value);\n                }}\n                sorter={makeSortFunction(\"status\")}\n                render={(id) => {\n                  return (\n                    <Tag color={STATUS_COLORS[id]} key={id}>\n                      {STATUS_TYPES[id]}\n                    </Tag>\n                  );\n                }}\n              />\n              <Column\n                title=\"See More\"\n                key=\"see-more\"\n                render={(record) => {\n                  return (\n                    <>\n                      <Button onClick={() => this.openModal(record)}>\n                        Details\n                      </Button>\n                    </>\n                  );\n                }}\n              />\n            </Table>\n            {this.renderModal()}\n          </Row>\n        </Content>\n      </Layout>\n    );\n  }\n}\n\n\nexport default App;\n","export const getSenatorsByStatus = (allSenators) => (\n    allSenators.reduce((acc, cur) => {\n        const statusKey = cur.status\n        if (!acc[statusKey]) {\n            acc[statusKey] = [cur]\n        } else {\n            acc[statusKey].push(cur)\n        }\n        return acc;\n    }, {})\n)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}