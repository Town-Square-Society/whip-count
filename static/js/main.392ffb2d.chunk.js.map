{"version":3,"sources":["utils/setup-firebase.js","constants/index.js","components/Modal/index.jsx","components/Search/index.jsx","components/Table/index.jsx","App/index.jsx","App/selectors.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","storageBucket","messagingSenderId","projectId","firestore","firebasedb","database","STATUS_TYPES_LIST","STATUS_COLORS","1","2","3","4","STATUS_TYPES","reduce","acc","status","index","array","STATUS_DISPLAY","map","value","text","Meta","SenatorModal","quote","senator","visible","closeModal","townHalls","width","title","displayName","party","state","onOk","onCancel","footer","className","style","maxWidth","bordered","cover","alt","src","govtrack_id","description","year","citation","href","actions","socials","facebook","target","rel","FacebookOutlined","twitter","TwitterOutlined","url","LinkOutlined","contact","address","phone","length","itemLayout","dataSource","renderItem","item","console","log","Item","extra","link","linkName","eventId","eventName","meetingType","Time","dateString","townHallsDisplay","Option","Search","senators","selectSenator","handleStateSearch","showSearch","placeholder","optionFilterProp","onChange","find","id","onFocus","onBlur","onSearch","val","filterOption","input","option","children","toLowerCase","indexOf","senatorOrState","key","Column","makeSortFunction","a","b","SenateTable","props","getSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","ref","node","searchInput","e","onPressEnter","handleSearch","marginBottom","display","type","onClick","icon","SearchOutlined","size","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","includes","onFilterDropdownVisibleChange","setTimeout","select","render","searchedColumn","highlightStyle","backgroundColor","searchWords","searchText","autoEscape","textToHighlight","windowWidth","this","setState","window","innerWidth","addEventListener","rowKey","pagination","sticky","scroll","x","y","sorter","responsive","filters","openModal","React","Component","Header","Content","tooltipPlacement","App","modalSenator","componentDidMount","once","then","snapshot","forEach","push","collection","get","data","sort","scrollTo","options","document","querySelector","scrollIntoView","renderModal","thisTownhalls","filter","officePersonId","senateMapByStatus","cur","statusKey","statusNo","flex","placement","join","behavior","gutter","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.392ffb2d.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/database';\n\nconst config = {\n    apiKey: 'AIzaSyDwZ41RWIytGELNBnVpDr7Y_k1ox2F2Heg',\n    authDomain: 'townhallproject-86312.firebaseapp.com',\n    databaseURL: 'https://townhallproject-86312.firebaseio.com',\n    storageBucket: 'townhallproject-86312.appspot.com',\n    messagingSenderId: '208752196071',\n    projectId: 'townhallproject-86312',\n};\n\n// const config = {\n//     apiKey: 'AIzaSyCJncx2G6bUnecl4H2VHSBTDfRRxg7H5Fs',\n//     authDomain: 'townhalltestingsms.firebaseapp.com',\n//     databaseURL: 'https://townhalltestingsms.firebaseio.com',\n//     storageBucket: 'townhalltestingsms.appspot.com',\n//     messagingSenderId: '86976100332',\n//     projectId: 'townhalltestingsms',\n// };\n\nfirebase.initializeApp(config);\nconst firestore = firebase.firestore();\nconst firebasedb = firebase.database();\n\nexport {\n    firebase,\n    firebasedb,\n    firestore\n};","export const STATUS_TYPES_LIST = [\n    \"Do not consider nominee - winner of 2020 Election should choose\",\n    \"Consider nominee but only after Election\", \n    \"Not on record\", \n    \"Consider new nominee\", \n    \"Other status\",\n    \"Unknown\"\n];\n\nexport const STATUS_COLORS = {\n    1: \"#5e3c99\",\n    2: \"#b2abd2\",\n    3: \"#7a7688\",\n    4: \"#e66101\",\n}\n\nexport const STATUS_TYPES = STATUS_TYPES_LIST.reduce((acc, status, index, array) => {\n    acc[index + 1] = status;\n    return acc;\n}, {})\n\nexport const STATUS_DISPLAY = STATUS_TYPES_LIST.map((status, index) => {\n    return {\n        value: index + 1,\n        text: status,\n    }\n})","import React from \"react\";\nimport { Modal, Card, Row, Col, List } from \"antd\";\nimport {\n  FacebookOutlined,\n  TwitterOutlined,\n  LinkOutlined,\n} from \"@ant-design/icons\";\nimport { STATUS_TYPES } from \"../../constants\";\nimport \"./style.css\";\n\nconst { Meta } = Card;\n\nconst townHallsDisplay = (townHalls) => (\n  <Card title=\"Attend an event\">\n    <List\n      itemLayout=\"vertical\"\n      dataSource={townHalls}\n      renderItem={(item) => {\n          console.log(item)\n          return (\n            <List.Item\n              extra={\n                item.link\n                  ? (<a href={item.link}>{item.linkName || \"More info\"}</a>)\n                  : []\n              }\n  \n            >\n              <List.Item.Meta\n                title={\n                  <a\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href={`https://townhallproject.com/${item.eventId}`}\n                  >\n                    {item.eventName}\n                  </a>\n                }\n                description={`${item.meetingType} at ${item.Time} on ${item.dateString}`}\n              />\n            </List.Item>\n          );}}\n    />\n  </Card>\n);\n\nconst renderQuote = (quote) => {\n  return (\n    <>\n      {quote.year && <p className=\"quote-year\">Statement in {quote.year}</p>}\n      <p className=\"quote\">{quote.text}</p>\n      {quote.citation && <p className=\"quote-citation\"><a href={quote.citation}>Link to citation</a></p>}\n    </>\n  );\n}\n\nconst SenatorModal = ({ senator, visible, closeModal, townHalls }) => (\n  <>\n    <Modal\n      width={\"80%\"}\n      title={`Senator ${senator.displayName} (${senator.party[0]}) ${senator.state}`}\n      visible={visible}\n      onOk={closeModal}\n      onCancel={closeModal}\n      footer={null}\n    \n    >\n      <div className=\"modal-row\">\n        <div className=\"left-container modal-col\">\n          <Card\n            style={{ maxWidth: 200 }}\n            bordered={false}\n            className={`status__${senator.status} photo-card`}\n            cover={\n              <img\n                alt=\"example\"\n                src={`https://www.govtrack.us/static/legislator-photos/${senator.govtrack_id}-200px.jpeg`}\n              />\n            }\n          >\n            <Meta description={`Position: ${STATUS_TYPES[senator.status]}`} />\n          </Card>\n        </div>\n        <div className=\"right-container modal-col\">\n          {senator.quote && renderQuote(senator.quote)}\n          <Card\n            title=\"Contact the senator:\"\n            actions={[\n              senator.socials.facebook && (\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={`https://facebook.com/${senator.socials.facebook}`}\n                >\n                  <FacebookOutlined />\n                </a>\n              ),\n              senator.socials.twitter && (\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={`https://twitter.com/${senator.socials.twitter}`}\n                >\n                  <TwitterOutlined />\n                </a>\n              ),\n              senator.socials.url && (\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={senator.socials.url}\n                >\n                  <LinkOutlined />\n                </a>\n              ),\n            ]}\n          >\n            <p>{senator.contact.address}</p>\n            <p>{senator.contact.phone}</p>\n          </Card>\n\n          {townHalls.length > 0 && townHallsDisplay(townHalls)}\n        </div>\n      </div>\n    </Modal>\n  </>\n);\n\nexport default SenatorModal;\n","import React from \"react\";\nimport { Select } from 'antd';\nimport { find } from 'lodash';\n\n// import states from \"../../data/states\";\n\nconst { Option } = Select;\n// const statesMap = states.map((state) => ({\n//   id: state,\n//   displayName: state,\n// }))\n\nconst Search = ({ senators, selectSenator, handleStateSearch }) => {\n  function onChange(value) {\n    const senator = find(senators, { id: value });\n    if (senator) {\n      selectSenator(senator);\n    }\n \n  }\n\n  function onBlur() {\n    //   console.log('blur');\n  }\n\n  function onFocus() {\n    //   console.log('focus');\n  }\n\n  function onSearch(val) {\n    //   console.log('search:', val);\n  }\n  return (\n    <Select\n      showSearch\n      style={{ width: 200 }}\n      placeholder=\"Search for your Senator\"\n      optionFilterProp=\"children\"\n      onChange={onChange}\n      onFocus={onFocus}\n      onBlur={onBlur}\n      onSearch={onSearch}\n      filterOption={(input, option) =>\n        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n      }\n    >\n      {senators.map((senatorOrState) => (\n        <Option key={senatorOrState.id}>{senatorOrState.displayName}</Option>\n      ))}\n    </Select>\n  );\n};\n\n  export default Search;","import React from \"react\";\nimport { Table, Button, Tag, Input, Space } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport Highlighter from \"react-highlight-words\";\n\nimport { STATUS_COLORS, STATUS_DISPLAY, STATUS_TYPES } from \"../../constants\";\nimport \"./style.css\";\n\nconst { Column } = Table;\nexport const makeSortFunction = (key) => {\n  return (a, b) => {\n    if (a[key] > b[key]) {\n      return 1;\n    }\n    if (a[key] < b[key]) {\n      return -1;\n    }\n    return 0;\n  };\n};\n\nconst MD_BREAKPOINT = 768;\nclass SenateTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      windowWidth: 0,\n    };\n  }\n  componentDidMount() {\n    this.setState({ width: window.innerWidth });\n    window.addEventListener(\"resize\", () => {\n      this.setState({ width: window.innerWidth });\n    });\n  }\n  getSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node) => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() =>\n            this.props.handleSearch(selectedKeys, confirm, dataIndex)\n          }\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() =>\n              this.props.handleSearch(selectedKeys, confirm, dataIndex)\n            }\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button\n            onClick={() => this.props.handleReset(clearFilters)}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex]\n            .toString()\n            .toLowerCase()\n            .includes(value.toLowerCase())\n        : \"\",\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select(), 100);\n      }\n    },\n    render: (text) =>\n      this.props.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n          searchWords={[this.props.searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : \"\"}\n        />\n      ) : (\n        text\n      ),\n  });\n  render() {\n    const { senators } = this.props;\n    return (\n      <Table\n        dataSource={senators}\n        rowKey=\"id\"\n        pagination={false}\n        sticky\n        scroll={{\n          x: true,\n          y: \"60vh\",\n        }}\n      >\n        <Column\n        title=\"Name\"\n        dataIndex=\"displayName\"\n        key=\"displayName\"\n        sorter={makeSortFunction(\"last_name\")}\n        />\n        <Column\n          {...this.getSearchProps(\"state\")}\n          title=\"State\"\n          dataIndex=\"state\"\n          width={100}\n          key=\"state\"\n          sorter={makeSortFunction(\"state\")}\n          responsive={[\"md\"]}\n        />\n        <Column\n          title=\"Party\"\n          dataIndex=\"party\"\n          key=\"party\"\n          sorter={makeSortFunction(\"party\")}\n          responsive={[\"md\"]}\n        />\n        <Column\n          title=\"Status\"\n          dataIndex=\"status\"\n          key=\"status\"\n          filters={STATUS_DISPLAY}\n          onFilter={(value, record) => {\n            return record.status.includes(value);\n          }}\n          sorter={makeSortFunction(\"status\")}\n          render={(id) => {\n            return (\n              <Tag color={STATUS_COLORS[id]} key={id}>\n                {STATUS_TYPES[id]}\n              </Tag>\n            );\n          }}\n        />\n        <Column\n          title=\"See More\"\n          key=\"see-more\"\n          render={(record) => {\n            return (\n              <>\n                <Button onClick={() => this.props.openModal(record)}>\n                  Details\n                </Button>\n              </>\n            );\n          }}\n        />\n      </Table>\n    );\n  }\n}\n\nexport default SenateTable;\n","import React, { Component } from 'react';\nimport {\n  Col,\n  Row,\n  Tooltip,\n  Layout,\n} from \"antd\";\nimport { map, filter } from \"lodash\";\n\n\nimport { firestore, firebasedb } from '../utils/setup-firebase';\nimport { getSenatorsByStatus } from './selectors';\nimport SenatorModal from \"../components/Modal\";\nimport Search from \"../components/Search\";\nimport './style.css';\nimport { STATUS_TYPES } from '../constants';\nimport SenateTable, { makeSortFunction } from '../components/Table';\nconst { Header, Content } = Layout;\n\nconst tooltipPlacement = {\n  1: \"right\",\n  2: \"top\",\n  3: \"top\",\n  4: \"left\"\n}\n\nclass App extends Component {\n  state = {\n    senators: [],\n    modalSenator: null,\n    searchText: \"\",\n  };\n\n  componentDidMount = () => {\n    firebasedb\n      .ref(\"townHalls\")\n      .once(\"value\")\n      .then((snapshot) => {\n        const townHalls = [];\n        snapshot.forEach((node) => {\n          townHalls.push(node.val());\n        });\n        this.setState({ townHalls });\n      });\n    firestore\n      .collection(\"whip_count_2020\")\n      .get()\n      .then((snapshot) => {\n        const senators = [];\n        snapshot.forEach((node) => {\n          const data = {\n            ...node.data(),\n            id: node.id,\n          };\n          senators.push(data);\n        });\n        senators.sort(makeSortFunction(\"state\"));\n        this.setState({ senators });\n      });\n  };\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = (clearFilters) => {\n    clearFilters();\n    this.setState({ searchText: \"\" });\n  };\n\n  scrollTo = (id, options) => {\n    const row = document.querySelector(`[data-row-key=\"${id}\"]`);\n    row.scrollIntoView(options);\n  };\n\n  renderModal = () => {\n    const { modalSenator, townHalls } = this.state;\n    if (!modalSenator) {\n      return null;\n    }\n    const thisTownhalls = filter(townHalls, {\n      officePersonId: modalSenator.id,\n    });\n    return (\n      <SenatorModal\n        visible={true}\n        senator={modalSenator}\n        townHalls={thisTownhalls}\n        closeModal={this.closeModal}\n      />\n    );\n  };\n\n  openModal = (senator) => {\n    this.setState({ modalSenator: senator });\n  };\n\n  selectSenator = (senator) => {\n    this.scrollTo(senator.id);\n\n    this.openModal(senator);\n  };\n\n\n  closeModal = () => {\n    this.setState({ modalSenator: null });\n  };\n\n  render() {\n    const senateMapByStatus = getSenatorsByStatus(this.state.senators);\n    return (\n      <Layout className=\"App\">\n        <Header>\n          <Search\n            handleStateSearch={this.handleSearch}\n            senators={this.state.senators}\n            selectSenator={this.selectSenator}\n          />\n        </Header>\n        <Content className=\"team\">\n          <Row className=\"all-status-container\">\n            {map(senateMapByStatus, (senators, statusNo) => {\n              return (\n                <Col\n                  key={statusNo}\n                  flex={\"1 1 auto\"}\n                  className={`status-col status__${statusNo}`}\n                >\n                  <h3>{`${STATUS_TYPES[statusNo]} (${senators.length})`}</h3>\n                  <div className=\"status-container\">\n                    {map(senators, (senator) => (\n                      <Tooltip\n                        key={senator.id}\n                        placement={tooltipPlacement[statusNo]}\n                        title={`Sen. ${senator.displayName} (${senator.party[0]}) ${senator.state}`}\n                      >\n                        <div\n                          className={[\n                            \"image-container\",\n                            senator.party.toLowerCase(),\n                          ].join(\" \")}\n                          onClick={() =>\n                            this.scrollTo(senator.id, { behavior: \"smooth\" })\n                          }\n                        >\n                          <img\n                            width={200}\n                            alt={`${senator.displayName}`}\n                            src={`https://www.govtrack.us/static/legislator-photos/${senator.govtrack_id}-100px.jpeg`}\n                          />\n                        </div>\n                      </Tooltip>\n                    ))}\n                  </div>\n                </Col>\n              );\n            })}\n          </Row>\n          <Row className=\"table-container\" gutter={16}>\n            <SenateTable\n              senators={this.state.senators}\n              getSearchProps={this.getSearchProps}\n              handleSearch={this.handleSearch}\n              handleReset={this.handleReset}\n              searchedColumn={this.state.searchedColumn}\n              searchText={this.state.searchText}\n              openModal={this.openModal}\n            />\n            {this.renderModal()}\n          </Row>\n        </Content>\n      </Layout>\n    );\n  }\n}\n\n\nexport default App;\n","export const getSenatorsByStatus = (allSenators) => (\n    allSenators.reduce((acc, cur) => {\n        const statusKey = cur.status\n        if (!acc[statusKey]) {\n            acc[statusKey] = [cur]\n        } else {\n            acc[statusKey].push(cur)\n        }\n        return acc;\n    }, {})\n)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}