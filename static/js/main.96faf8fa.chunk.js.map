{"version":3,"sources":["circle-in-person.svg","thp-logo.png","utils/setup-firebase.js","constants/index.js","App/selectors.js","components/Modal/index.jsx","data/states.js","components/Search/index.jsx","components/Table/index.jsx","components/ProgressBar/index.jsx","App/IssueCounts.jsx","components/LandingPageCards/index.jsx","App/index.jsx","serviceWorker.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","storageBucket","messagingSenderId","projectId","firestore","firebasedb","database","TRACKED_ISSUES","key","header","DC_STATEHOOD_STATUS_TYPE_LIST","HR1_STATUS_TYPE_LIST","HR4_STATUS_TYPE_LIST","FILIBUSTER_STATUS_TYPE_LIST","STATUS_MAPPING","shortStatus","longStatus","STATUS_COLORS","1","2","3","4","5","STATUS_COLORS_PROGRESS","getStatusTypes","reduce","acc","status","index","array","map","value","text","issue","Meta","SenatorModal","senator","visible","closeModal","townHalls","selectedIssue","width","title","displayName","party","state","onOk","onCancel","footer","className","style","maxWidth","bordered","cover","alt","src","govtrack_id","description","electionAcknowledgmentCitation","target","rel","href","renderCitation","actions","socials","facebook","FacebookOutlined","twitter","TwitterOutlined","url","LinkOutlined","contact","address","phone","length","itemLayout","dataSource","renderItem","item","Item","extra","link","linkName","eventId","eventName","meetingType","Time","dateString","townHallsDisplay","Option","statesMap","AL","AK","AS","AZ","AR","CA","CO","CT","DE","DC","FM","FL","GA","GU","HI","ID","IL","IN","IA","KS","KY","LA","ME","MH","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","MP","OH","OK","OR","PW","PA","PR","RI","SC","SD","TN","TX","UT","VT","VI","VA","WA","WV","WI","WY","stateName","abr","id","Search","senators","selectSenator","handleStateSearch","handleReset","showSearch","allowClear","showArrow","suffixIcon","SearchOutlined","placeholder","optionFilterProp","onChange","states","includes","find","onFocus","onBlur","onSearch","val","onClear","filterOption","input","option","children","toLowerCase","indexOf","senatorOrState","Column","makeSortFunction","a","b","SenateTable","props","getSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","ref","node","searchInput","e","onPressEnter","handleSearch","marginBottom","display","type","onClick","icon","size","filterIcon","filtered","color","undefined","onFilter","record","toString","onFilterDropdownVisibleChange","setTimeout","select","render","searchedColumn","highlightStyle","backgroundColor","searchWords","searchText","autoEscape","textToHighlight","windowWidth","this","setState","window","innerWidth","addEventListener","height","rowKey","pagination","sticky","scroll","x","y","sorter","name","searchedSenator","responsive","filters","openModal","React","Component","ProgressBar","senateMapByStatus","flexBasis","background","tooltipPlacement","IssueCounts","componentDidMount","getTableHight","statusContainer","document","getElementsByClassName","progressBar","tableHeader","scrollHeight","tableHeight","innerHeight","setTableHeight","filteredSenators","shortStatusText","statusNo","flex","placement","join","preview","fallback","circleInPerson","gutter","LandingPageCards","setIssue","Header","Content","Footer","formatParty","console","log","App","modalSenator","once","then","snapshot","forEach","push","collection","get","data","sort","issueKey","clearIssue","renderModal","thisTownhalls","filter","officePersonId","scrollTo","options","row","querySelector","scrollIntoView","allSenators","selectedStatus","cur","statusKey","filterKey","filterValue","getFilteredSenators","classNames","align","span","ghost","ArrowLeftOutlined","thpLogo","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.96faf8fa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/circle-in-person.cd81734f.svg\";","module.exports = __webpack_public_path__ + \"static/media/thp-logo.06259d61.png\";","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/database';\n\nconst config = {\n    apiKey: 'AIzaSyDwZ41RWIytGELNBnVpDr7Y_k1ox2F2Heg',\n    authDomain: 'townhallproject-86312.firebaseapp.com',\n    databaseURL: 'https://townhallproject-86312.firebaseio.com',\n    storageBucket: 'townhallproject-86312.appspot.com',\n    messagingSenderId: '208752196071',\n    projectId: 'townhallproject-86312',\n};\n\n// const config = {\n//     apiKey: 'AIzaSyCJncx2G6bUnecl4H2VHSBTDfRRxg7H5Fs',\n//     authDomain: 'townhalltestingsms.firebaseapp.com',\n//     databaseURL: 'https://townhalltestingsms.firebaseio.com',\n//     storageBucket: 'townhalltestingsms.appspot.com',\n//     messagingSenderId: '86976100332',\n//     projectId: 'townhalltestingsms',\n// };\n\nfirebase.initializeApp(config);\nconst firestore = firebase.firestore();\nconst firebasedb = firebase.database();\n\nexport {\n    firebase,\n    firebasedb,\n    firestore\n};","\nconst ELECTION_STATUS_KEY = \"electionAcknowledgmentStatus\";\nconst SCOTUS_STATUS_KEY = \"status\";\nconst NOMINEE_STATUS_KEY = \"nomineeStatus\";\nconst IMPEACHMENT_STATUS_KEY = \"impeachmentTrialStatus\";\nconst FILIBUSTER_STATUS_KEY = \"filibusterReformStatus\";\nconst DC_STATEHOOD_STATUS_KEY = \"dcStatehoodStatus\";\nconst HR1_STATUS_KEY = \"hr1Status\";\nconst HR4_STATUS_KEY = \"hr4Status\";\n\nexport const TRACKED_ISSUES = [{\n    key: IMPEACHMENT_STATUS_KEY,\n    header: \"Impeachment Trial\"\n}, {\n    key: FILIBUSTER_STATUS_KEY,\n    header: \"Filibuster Reform\"\n}, {\n    key: DC_STATEHOOD_STATUS_KEY,\n    header: \"D.C. Statehood\"\n}, {\n    key: HR1_STATUS_KEY,\n    header: \"For the People Act\"\n}, {\n    key: HR4_STATUS_KEY,\n    header: \"John Lewis Voting Rights Advancement Act\"\n}]\n\nexport const STATUS_TO_SHOW = IMPEACHMENT_STATUS_KEY;\n\nconst DC_STATEHOOD_STATUS_TYPE_LIST = [\n    \"Supports D.C. Statehood\",\n    \"Open to D.C. Statehood\",\n    \"Position unknown\",\n    \"\",\n    \"Opposed to D.C. Statehood\"\n];\n\nconst HR1_STATUS_TYPE_LIST = [\n    \"Supports H.R. 1\",\n    \"Open to H.R. 1\",\n    \"Position unknown\",\n    \"\",\n    \"Opposed to H.R. 1\"\n];\n\nconst HR4_STATUS_TYPE_LIST = [\n    \"Supports H.R. 4\",\n    \"Open to H.R. 4\",\n    \"Position unknown\",\n    \"\",\n    \"Opposed to H.R. 4\"\n];\n\nconst FILIBUSTER_STATUS_TYPE_LIST = [\n    \"Supports eliminating legislative filibuster\",\n    \"Open to filibuster reform\",\n    \"Position unknown\",\n    \"\",\n    \"Opposed to filibuster reform\"\n];\n\nconst IMPEACHMENT_STATUS_TYPE_LIST = [\n    \"Expected to vote to convict\",\n    \"Supported House impeachment\",\n    \"Position unknown\",\n    \"Non-committal on trial vote\",\n    \"Opposes conviction\"\n]\n\nconst SHORT_IMPEACHMENT_STATUS_TYPE_LIST = [\n    \"Full support for impeachment\",\n    \"Open to removal options\",\n    \"No position\",\n    \"No comment or vague comments\",\n    \"Opposed to impeachment\"\n]\n\nconst ELECTION_STATUS_TYPE_LIST = [\n    \"Voting to certify Biden's Electoral College victory\",\n    \"Calls to begin transition processes\",\n    \"Calls for Biden to receive Security Briefings\",\n    \"No comment or vague comments\",\n    \"Voting against certification of Biden's Electoral College victory\"\n]\n\nconst SHORT_ELECTION_STATUS_TYPE_LIST = [\n    \"Voting to certify Biden's Electoral College victory\",\n    \"Calls for transition processes\",\n    \"Calls for security briefings\",\n    \"No comment or vague comments\",\n    \"Voting against certification\"\n]\n\nconst STATUS_TYPES_LIST = [\n    \"Do not consider nominee - winner of 2020 Election should choose\",\n    \"Consider nominee but only after Election\",\n    \"Not on record\",\n    \"Consider new nominee\",\n    \"Other status\",\n    \"Unknown\"\n];\n\nconst NOMINEE_STATUS_TYPES_LIST = [\n    \"Will vote against confirmation\",\n    \"Leaning against confirmation\",\n    \"Undecided or unknown\",\n    \"Leaning to confirm\",\n    \"Will vote to confirm\",\n]\nconst SHORT_NOMINEE_STATUS_TYPES_LIST = [\n    \"Will vote against Barrett\",\n    \"Leaning against\",\n    \"Undecided or unknown\",\n    \"Leaning to confirm\",\n    \"Will confirm Barrett\",\n];\n\nconst SHORT_STATUS_TYPES_LIST = [\n    \"Wait until 2021\",\n    \"Wait until after election\",\n    \"Not yet on record\",\n    \"Consider nominee now\",\n    \"Other\",\n    \"Unknown\"\n];\n\nexport const STATUS_MAPPING = {\n    [ELECTION_STATUS_KEY]: {\n        shortStatus: SHORT_ELECTION_STATUS_TYPE_LIST,\n        longStatus: ELECTION_STATUS_TYPE_LIST\n    },\n    [NOMINEE_STATUS_KEY]: {\n        shortStatus: SHORT_NOMINEE_STATUS_TYPES_LIST,\n        longStatus: NOMINEE_STATUS_TYPES_LIST\n    },\n    [SCOTUS_STATUS_KEY]:{\n        shortStatus: SHORT_STATUS_TYPES_LIST,\n        longStatus: STATUS_TYPES_LIST\n    },\n    [IMPEACHMENT_STATUS_KEY]: {\n        shortStatus: SHORT_IMPEACHMENT_STATUS_TYPE_LIST,\n        longStatus: IMPEACHMENT_STATUS_TYPE_LIST\n    },\n    [DC_STATEHOOD_STATUS_KEY]: {\n        shortStatus: DC_STATEHOOD_STATUS_TYPE_LIST,\n        longStatus: DC_STATEHOOD_STATUS_TYPE_LIST\n    },\n    [HR1_STATUS_KEY]: {\n        shortStatus: HR1_STATUS_TYPE_LIST,\n        longStatus: HR1_STATUS_TYPE_LIST\n    },\n    [HR4_STATUS_KEY]: {\n        shortStatus: HR4_STATUS_TYPE_LIST,\n        longStatus: HR4_STATUS_TYPE_LIST\n    },\n    [FILIBUSTER_STATUS_KEY]: {\n        shortStatus: FILIBUSTER_STATUS_TYPE_LIST,\n        longStatus: FILIBUSTER_STATUS_TYPE_LIST\n    }\n}\n\nconst DARK_PURPLE = \"#542788\"\nconst MED_PURPLE = \"#998ec3\"\nconst LIGHT_PURPLE = \"#c8afdf\";\nconst GRAY = \"#c3c3c3\"\nconst LIGHT_ORANGE = \"#fee0b6\"\nconst MED_ORANGE = \"#f1a340\"\nconst DARK_ORANGE = \"#e66101\"\n\nexport const STATUS_COLORS = {\n    1: DARK_PURPLE,\n    2: MED_PURPLE,\n    3: GRAY,\n    4: MED_ORANGE,\n    5: DARK_ORANGE,\n}\n\nexport const STATUS_COLORS_PROGRESS = {\n    1: DARK_PURPLE,\n    2: MED_PURPLE,\n    3: GRAY,\n    4: MED_ORANGE,\n    5: DARK_ORANGE,\n}\n\nexport const SHORT_STATUS_TYPES = STATUS_MAPPING[STATUS_TO_SHOW].shortStatus.reduce((acc, status, index) => {\n    acc[index + 1] = status;\n    return acc;\n}, {})\n\nexport const STATUS_TYPES = STATUS_MAPPING[STATUS_TO_SHOW].longStatus.reduce((acc, status, index, array) => {\n    acc[index + 1] = status;\n    return acc;\n}, {})\n\nexport const STATUS_DISPLAY = STATUS_MAPPING[STATUS_TO_SHOW].longStatus.map((status, index) => {\n    return {\n        value: index + 1,\n        text: status,\n    }\n})","import { filter } from \"lodash\"; \nimport {\n    STATUS_MAPPING\n} from \"../constants\";\n\nexport const getSenatorsByStatus = (allSenators, selectedStatus) => {\n    if (!selectedStatus) {\n        return {}\n    }\n\n    return allSenators.reduce((acc, cur) => {\n        const statusKey = cur[selectedStatus]\n        if (!acc[statusKey]) {\n            acc[statusKey] = [cur]\n        } else {\n            acc[statusKey].push(cur)\n        }\n        return acc;\n    }, {})\n}\n\nexport const getShortStatusText = (issue) => {\n    if (!issue) {\n        return {}\n    }\n    return STATUS_MAPPING[issue].shortStatus.reduce((acc, status, index) => {\n        acc[index + 1] = status;\n        return acc;\n    }, {})\n}\n\nexport const getLongStatusText = (issue) => {\n    if (!issue) {\n        return {}\n    }\n    return STATUS_MAPPING[issue].longStatus.reduce((acc, status, index, array) => {\n        acc[index + 1] = status;\n        return acc;\n    }, {})\n}\n\nexport const getStatusTypes = (issue) => {\n    return STATUS_MAPPING[issue].longStatus.reduce((acc, status, index, array) => {\n        acc[index + 1] = status;\n        return acc;\n    }, {})\n}\n\nexport const getStatusDisplay = (issue) => {\n    return STATUS_MAPPING[issue].longStatus.map((status, index) => {\n                return {\n                    value: index + 1,\n                    text: status,\n                }})\n}\n\nexport const getFilteredSenators = (allSenators, filterKey, filterValue) => {\n    if (filterKey && filterValue) {\n        return filter(allSenators, (senator) => {\n            return senator[filterKey].toLowerCase() === filterValue.toLowerCase()\n        })\n        \n    }\n    return allSenators;\n}","import React from \"react\";\nimport { Modal, Card, List } from \"antd\";\nimport {\n  FacebookOutlined,\n  TwitterOutlined,\n  LinkOutlined,\n} from \"@ant-design/icons\";\nimport \"./style.css\";\nimport { getStatusTypes } from \"../../App/selectors\";\n\nconst { Meta } = Card;\n\nconst townHallsDisplay = (townHalls) => (\n  <Card title=\"Attend an event\">\n    <List\n      itemLayout=\"vertical\"\n      dataSource={townHalls}\n      renderItem={(item) => {\n          return (\n            <List.Item\n              extra={\n                item.link ? (\n                  <a href={item.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                    {item.linkName || \"More info\"}\n                  </a>\n                ) : (\n                  []\n                )\n              }\n            >\n              <List.Item.Meta\n                title={\n                  <a\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href={`https://townhallproject.com/${item.eventId}`}\n                  >\n                    {item.eventName}\n                  </a>\n                }\n                description={`${item.meetingType} at ${item.Time} on ${item.dateString}`}\n              />\n            </List.Item>\n          );}}\n    />\n  </Card>\n);\n\nconst renderCitation = (senator) => {\n  return (\n    <>\n      {/* {quote.year && <p className=\"quote-year\">Statement in {quote.year}</p>}\n      <p className=\"quote\">{quote.text}</p> */}\n      {senator.electionAcknowledgmentCitation && (\n        <p className=\"quote-citation\">\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href={senator.electionAcknowledgmentCitation}>\n            Link to citation\n          </a>\n        </p>\n      )}\n    </>\n  );\n};\n\nconst SenatorModal = ({\n  senator,\n  visible,\n  closeModal,\n  townHalls,\n  selectedIssue,\n}) => (\n  <>\n    <Modal\n      width={\"80%\"}\n      title={`Senator ${senator.displayName} (${senator.party[0]}) ${senator.state}`}\n      visible={visible}\n      onOk={closeModal}\n      onCancel={closeModal}\n      footer={null}\n    >\n      <div className=\"modal-row\">\n        <div className=\"left-container modal-col\">\n          <Card\n            style={{ maxWidth: 200 }}\n            bordered={false}\n            className={`status__${senator[selectedIssue]} photo-card`}\n            cover={\n              <img\n                alt=\"example\"\n                src={`https://www.govtrack.us/static/legislator-photos/${senator.govtrack_id}-200px.jpeg`}\n              />\n            }\n          >\n            <Meta\n              description={`Position: ${getStatusTypes(selectedIssue)[senator[selectedIssue]]}`}\n            />\n          </Card>\n        </div>\n        <div className=\"right-container modal-col\">\n          {renderCitation(senator)}\n          <Card\n            title=\"Contact:\"\n            actions={[\n              senator.socials.facebook && (\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={`https://facebook.com/${senator.socials.facebook}`}\n                >\n                  <FacebookOutlined />\n                </a>\n              ),\n              senator.socials.twitter && (\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={`https://twitter.com/${senator.socials.twitter}`}\n                >\n                  <TwitterOutlined />\n                </a>\n              ),\n              senator.socials.url && (\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={senator.socials.url}\n                >\n                  <LinkOutlined />\n                </a>\n              ),\n            ]}\n          >\n            <p>{senator.contact.address}</p>\n            <p>{senator.contact.phone}</p>\n          </Card>\n\n          {townHalls.length > 0 && townHallsDisplay(townHalls)}\n        </div>\n      </div>\n    </Modal>\n  </>\n);\n\nexport default SenatorModal;\n","export const statesAb = {\n    AL: \"Alabama\",\n    AK: \"Alaska\",\n    AS: \"American Samoa\",\n    AZ: \"Arizona\",\n    AR: \"Arkansas\",\n    CA: \"California\",\n    CO: \"Colorado\",\n    CT: \"Connecticut\",\n    DE: \"Delaware\",\n    DC: \"District Of Columbia\",\n    FM: \"Federated States Of Micronesia\",\n    FL: \"Florida\",\n    GA: \"Georgia\",\n    GU: \"Guam\",\n    HI: \"Hawaii\",\n    ID: \"Idaho\",\n    IL: \"Illinois\",\n    IN: \"Indiana\",\n    IA: \"Iowa\",\n    KS: \"Kansas\",\n    KY: \"Kentucky\",\n    LA: \"Louisiana\",\n    ME: \"Maine\",\n    MH: \"Marshall Islands\",\n    MD: \"Maryland\",\n    MA: \"Massachusetts\",\n    MI: \"Michigan\",\n    MN: \"Minnesota\",\n    MS: \"Mississippi\",\n    MO: \"Missouri\",\n    MT: \"Montana\",\n    NE: \"Nebraska\",\n    NV: \"Nevada\",\n    NH: \"New Hampshire\",\n    NJ: \"New Jersey\",\n    NM: \"New Mexico\",\n    NY: \"New York\",\n    NC: \"North Carolina\",\n    ND: \"North Dakota\",\n    MP: \"Northern Mariana Islands\",\n    OH: \"Ohio\",\n    OK: \"Oklahoma\",\n    OR: \"Oregon\",\n    PW: \"Palau\",\n    PA: \"Pennsylvania\",\n    PR: \"Puerto Rico\",\n    RI: \"Rhode Island\",\n    SC: \"South Carolina\",\n    SD: \"South Dakota\",\n    TN: \"Tennessee\",\n    TX: \"Texas\",\n    UT: \"Utah\",\n    VT: \"Vermont\",\n    VI: \"Virgin Islands\",\n    VA: \"Virginia\",\n    WA: \"Washington\",\n    WV: \"West Virginia\",\n    WI: \"Wisconsin\",\n    WY: \"Wyoming\"\n}\n\nexport default [\n    \"AK\",\n    \"AL\",\n    \"AR\",\n    \"AS\",\n    \"AZ\",\n    \"CA\",\n    \"CO\",\n    \"CT\",\n    \"DC\",\n    \"DE\",\n    \"FL\",\n    \"GA\",\n    \"GU\",\n    \"HI\",\n    \"IA\",\n    \"ID\",\n    \"IL\",\n    \"IN\",\n    \"KS\",\n    \"KY\",\n    \"LA\",\n    \"MA\",\n    \"MD\",\n    \"ME\",\n    \"MI\",\n    \"MN\",\n    \"MO\",\n    \"MP\",\n    \"MS\",\n    \"MT\",\n    \"NC\",\n    \"ND\",\n    \"NE\",\n    \"NH\",\n    \"NJ\",\n    \"NM\",\n    \"NV\",\n    \"NY\",\n    \"OH\",\n    \"OK\",\n    \"OR\",\n    \"PA\",\n    \"PR\",\n    \"RI\",\n    \"SC\",\n    \"SD\",\n    \"TN\",\n    \"TX\",\n    \"UT\",\n    \"VA\",\n    \"VI\",\n    \"VT\",\n    \"WA\",\n    \"WI\",\n    \"WV\",\n    \"WY\",\n];\n","import React from \"react\";\nimport { Select } from \"antd\";\nimport { find, map } from \"lodash\";\nimport { SearchOutlined } from \"@ant-design/icons\";\n\nimport states, { statesAb } from \"../../data/states\";\n\nconst { Option } = Select;\nconst statesMap = map(statesAb, (stateName, abr) => ({\n  id: abr,\n  displayName: stateName,\n}));\n\nconst Search = ({\n  senators,\n  selectSenator,\n  handleStateSearch,\n  handleReset,\n}) => {\n  function onChange(value) {\n    const isState = states.includes(value);\n    if (isState) {\n      handleStateSearch(value);\n    }\n    const senator = find(senators, { id: value });\n    if (senator) {\n      selectSenator(senator);\n    }\n  }\n\n  function onBlur() {\n    //   console.log('blur');\n  }\n\n  function onFocus() {\n    //   console.log('focus');\n  }\n\n  function onSearch(val) {\n    //   console.log('search:', val);\n  }\n  return (\n    <>\n      <h4 className=\"search-label\">Where do your Senators stand?</h4>\n\n      <Select\n        showSearch\n        style={{ width: 300 }}\n        allowClear\n        showArrow={false}\n        suffixIcon={<SearchOutlined />}\n        placeholder=\"Search Senator's name or state\"\n        optionFilterProp=\"children\"\n        onChange={onChange}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        onSearch={onSearch}\n        onClear={handleReset}\n        filterOption={(input, option) => {\n          return (\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0 ||\n            option.value.toLowerCase().indexOf(input.toLowerCase()) >= 0\n          );\n        }}\n      >\n        {[...senators, ...statesMap].map((senatorOrState) => (\n          <Option key={senatorOrState.id}>{senatorOrState.displayName}</Option>\n        ))}\n      </Select>\n    </>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\nimport { Table, Button, Tag, Input, Space } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport Highlighter from \"react-highlight-words\";\n\nimport { STATUS_COLORS, STATUS_TYPES } from \"../../constants\";\nimport \"./style.css\";\nimport { getStatusDisplay, getStatusTypes } from \"../../App/selectors\";\n\nconst { Column } = Table;\nexport const makeSortFunction = (key) => {\n  return (a, b) => {\n    if (a[key] > b[key]) {\n      return 1;\n    }\n    if (a[key] < b[key]) {\n      return -1;\n    }\n    return 0;\n  };\n};\n\nconst MD_BREAKPOINT = 768;\n\nclass SenateTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      windowWidth: 0,\n    };\n  }\n  componentDidMount() {\n    this.setState({ windowWidth: window.innerWidth });\n    window.addEventListener(\"resize\", () => {\n      this.setState({ windowWidth: window.innerWidth });\n    });\n  }\n  getSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node) => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() =>\n            this.props.handleSearch(selectedKeys, confirm, dataIndex)\n          }\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() =>\n              this.props.handleSearch(selectedKeys, confirm, dataIndex)\n            }\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button\n            onClick={() => this.props.handleReset(clearFilters)}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex]\n            .toString()\n            .toLowerCase()\n            .includes(value.toLowerCase())\n        : \"\",\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select(), 100);\n      }\n    },\n    render: (text) =>\n      this.props.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n          searchWords={[this.props.searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : \"\"}\n        />\n      ) : (\n        text\n      ),\n  });\n  render() {\n    const { senators, height, selectedIssue } = this.props;\n    return (\n      <Table\n        dataSource={senators}\n        rowKey=\"id\"\n        pagination={false}\n        sticky\n        scroll={{\n          x: true,\n          y: height || \"60vh\",\n        }}\n      >\n        <Column\n          title=\"Name\"\n          dataIndex=\"displayName\"\n          key=\"displayName\"\n          sorter={makeSortFunction(\"last_name\")}\n          render={(text, record) => {\n            const name =\n              this.state.windowWidth < MD_BREAKPOINT\n                ? `${record.displayName} (${record.party[0]}) ${record.state}`\n                : text;\n            return this.props.searchedSenator === text ? (\n              <Highlighter\n                highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n                searchWords={[this.props.searchedSenator]}\n                autoEscape\n                textToHighlight={name ? text.toString() : \"\"}\n              />\n            ) : (\n              name\n            );\n          }}\n        />\n        <Column\n          {...this.getSearchProps(\"state\")}\n          title=\"State\"\n          dataIndex=\"state\"\n          width={100}\n          key=\"state\"\n          sorter={makeSortFunction(\"state\")}\n          responsive={[\"md\"]}\n        />\n        <Column\n          title=\"Party\"\n          dataIndex=\"party\"\n          key=\"party\"\n          sorter={makeSortFunction(\"party\")}\n          responsive={[\"md\"]}\n        />\n        <Column\n          title=\"Position\"\n          dataIndex={selectedIssue}\n          key={selectedIssue}\n          filters={getStatusDisplay(selectedIssue)}\n          onFilter={(value, record) => {\n            return record[selectedIssue].includes(value);\n          }}\n          sorter={makeSortFunction(selectedIssue)}\n          render={(id) => {\n            return (\n              <Tag color={STATUS_COLORS[id]} key={id}>\n                {getStatusTypes(selectedIssue)[id]}\n              </Tag>\n            );\n          }}\n        />\n        <Column\n          title=\"See More\"\n          key=\"see-more\"\n          render={(record) => {\n            return (\n              <>\n                <Button onClick={() => this.props.openModal(record)}>\n                  Details\n                </Button>\n              </>\n            );\n          }}\n        />\n      </Table>\n    );\n  }\n}\n\nexport default SenateTable;\n","import React from \"react\";\nimport { map } from \"lodash\";\nimport { STATUS_COLORS_PROGRESS } from \"../../constants\";\n\nimport \"./style.css\";\n\nconst ProgressBar = ({ senateMapByStatus }) => (\n  <div className=\"progress-bar-container\">\n    <div className=\"progress-bar\">\n      {map(senateMapByStatus, (senators, status) => {\n        return (\n          <div\n            key={`progress-${status}`}\n            style={{\n              flexBasis: `${senators.length}%`,\n              background: STATUS_COLORS_PROGRESS[status],\n              height: 20,\n              color: \"white\",\n            }}\n          >\n            {senators.length}\n          </div>\n        );\n      })}\n    </div>\n    <div className=\"half-way\"></div>\n  </div>\n);\n\nexport default ProgressBar;\n","import React, { Component } from 'react';\nimport { Col, Row, Tooltip, Layout, Image } from \"antd\";\nimport { map } from \"lodash\";\n\n\nimport './style.css';\nimport SenateTable from '../components/Table';\n\nimport circleInPerson from '../circle-in-person.svg'\nimport ProgressBar from '../components/ProgressBar';\nimport { getShortStatusText } from './selectors';\n\n\nconst tooltipPlacement = {\n  1: \"right\",\n  2: \"top\",\n  3: \"top\",\n  4: \"left\"\n}\n\n\nclass IssueCounts extends Component {\n\n\n  componentDidMount = () => {\n    \n        this.getTableHight();\n\n \n      window.addEventListener(\"resize\", () => this.getTableHight());\n  };\n\n  handleStateSearch = (value) => {\n    this.setState({\n      searchText: value,\n      searchedColumn: \"state\",\n    });\n  };\n\n  getTableHight = () => {\n    const statusContainer = document.getElementsByClassName(\"all-status-container\");\n    const footer = document.getElementsByClassName(\"ant-layout-footer\");\n    const progressBar = document.getElementsByClassName(\n      \"progress-bar-container\"\n    );\n    const tableHeader = document.getElementsByClassName(\"ant-table-thead\");\n    if (statusContainer[0] && progressBar[0] && tableHeader[0] && footer[0]) {\n      const height =\n        statusContainer[0].scrollHeight +\n        progressBar[0].scrollHeight +\n        footer[0].scrollHeight +\n        tableHeader[0].scrollHeight;\n      const windowHeight = window.innerHeight;\n      const tableHeight = windowHeight - height;\n      this.props.setTableHeight( tableHeight );\n    }\n  }\n\n\n\n  selectSenator = (senator) => {\n    this.props.selectSenator(senator)\n  };\n\n \n\n  render() {\n    const { senateMapByStatus, filteredSenators, selectedIssue } = this.props;\n    const shortStatusText = getShortStatusText(selectedIssue);\n    \n    return (\n      <>\n        <Row className=\"all-status-container\">\n          {map(senateMapByStatus, (senators, statusNo) => {\n            return (\n              <Col\n                key={statusNo}\n                flex={\"1 1 auto\"}\n                className={`status-col status__${statusNo}`}\n              >\n                <h3>{`${shortStatusText[statusNo]} (${senators.length})`}</h3>\n                <div className=\"status-container\">\n                  {map(senators, (senator) => (\n                    <Tooltip\n                      key={senator.id}\n                      placement={tooltipPlacement[statusNo]}\n                      title={`Sen. ${senator.displayName} (${senator.party[0]}) ${senator.state}`}\n                    >\n                      <div\n                        className={[\n                          \"image-container\",\n                          senator.party.toLowerCase(),\n                        ].join(\" \")}\n                        onClick={() => this.selectSenator(senator)}\n                      >\n                        <Image\n                          preview={false}\n                          alt={senator.displayName}\n                          fallback={circleInPerson}\n                          src={`https://www.govtrack.us/static/legislator-photos/${senator.govtrack_id}-100px.jpeg`}\n                        />\n                      </div>\n                    </Tooltip>\n                  ))}\n                </div>\n              </Col>\n            );\n          })}\n        </Row>\n        {senateMapByStatus[1] && (\n          <ProgressBar senateMapByStatus={senateMapByStatus} />\n        )}\n        <Row className=\"table-container\" gutter={16}>\n          <SenateTable\n            senators={filteredSenators}\n            getSearchProps={this.getSearchProps}\n            handleSearch={this.handleSearch}\n            handleReset={this.handleReset}\n            searchedColumn={this.props.searchedColumn}\n            searchText={this.props.searchText}\n            openModal={this.props.openModal}\n            searchedSenator={this.props.searchedSenator}\n            height={this.props.tableHeight}\n            getTableHight={this.getTableHight}\n            selectedIssue={selectedIssue}\n          />\n        </Row>\n      </>\n    );\n  }\n}\n\n\nexport default IssueCounts;\n","import React from \"react\";\nimport { Card } from \"antd\";\nimport { TRACKED_ISSUES } from \"../../constants\";\n\nconst LandingPageCards = ({setIssue}) => (\n        TRACKED_ISSUES.map((issue) => \n             (\n              <Card\n                title={issue.header}\n                onClick={() => setIssue(issue.key)}\n              ></Card>\n            )\n        )\n);\n\nexport default LandingPageCards;\n","import React, { Component } from 'react';\nimport { Layout, Button, Col, Row } from \"antd\";\nimport { find, filter } from \"lodash\";\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\nimport classNames from \"classnames\";\n\nimport { firestore, firebasedb } from '../utils/setup-firebase';\nimport {\n  getFilteredSenators,\n  getLongStatusText,\n  getSenatorsByStatus,\n  getShortStatusText,\n} from \"./selectors\";\nimport SenatorModal from \"../components/Modal\";\nimport Search from \"../components/Search\";\nimport './style.css';\nimport SenateTable, { makeSortFunction } from '../components/Table';\nimport ProgressBar from \"../components/ProgressBar\";\n\nimport thpLogo from '../thp-logo.png';\nimport circleInPerson from '../circle-in-person.svg'\nimport IssueCounts from './IssueCounts';\nimport LandingPageCards from '../components/LandingPageCards';\nimport { TRACKED_ISSUES } from '../constants';\n\nconst { Header, Content, Footer } = Layout;\n\nconst tooltipPlacement = {\n  1: \"right\",\n  2: \"top\",\n  3: \"top\",\n  4: \"left\"\n}\n\nconst formatParty = (party) => {\n  if (!party) {\n    return console.log('no party')\n  }\n  if (party.length > 1) {\n    return party\n  }\n  switch (party) {\n    case 'D':\n      return 'Democratic'\n      case 'R':\n        return 'Republican'\n      default: \n        return 'Independent'\n  }\n\n}\nclass App extends Component {\n  state = {\n    senators: [],\n    modalSenator: null,\n    searchText: \"\",\n    searchedColumn: \"\",\n    selectedIssue: \"\",\n    tableHeight: 0,\n  };\n\n  componentDidMount = () => {\n    firebasedb\n      .ref(\"townHalls\")\n      .once(\"value\")\n      .then((snapshot) => {\n        const townHalls = [];\n        snapshot.forEach((node) => {\n          townHalls.push(node.val());\n        });\n        this.setState({ townHalls });\n      });\n    firestore\n      .collection(\"whip_count_2020\")\n      .get()\n      .then((snapshot) => {\n        const senators = [];\n        snapshot.forEach((node) => {\n          const data = {\n            ...node.data(),\n            id: node.id,\n            party: node.data().party\n              ? formatParty(node.data().party)\n              : console.log(node.data().displayName),\n          };\n          senators.push(data);\n        });\n        senators.sort(makeSortFunction(\"state\"));\n        this.setState({ senators });\n      })\n \n\n    window.addEventListener(\"resize\", () => this.getTableHight());\n  };\n\n  handleStateSearch = (value) => {\n    this.setState({\n      searchText: value,\n      searchedColumn: \"state\",\n    });\n  };\n\n  setTableHeight = (tableHeight) => {\n\n      this.setState({ tableHeight });\n\n  };\n\n  setIssue = (issueKey) => {\n    this.setState({selectedIssue: issueKey})\n  }\n\n  clearIssue = () => {\n    this.setState({selectedIssue: \"\"})\n  }\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = (clearFilters) => {\n    if (clearFilters) {\n      clearFilters();\n    }\n    this.setState({ searchText: \"\", searchedSenator: \"\" });\n  };\n\n\n  renderModal = () => {\n    const { modalSenator, townHalls } = this.state;\n    if (!modalSenator) {\n      return null;\n    }\n    const thisTownhalls = filter(townHalls, {\n      officePersonId: modalSenator.id,\n    });\n    return (\n      <SenatorModal\n        visible={true}\n        senator={modalSenator}\n        townHalls={thisTownhalls}\n        closeModal={this.closeModal}\n        selectedIssue={this.state.selectedIssue}\n      />\n    );\n  };\n  \n   scrollTo = (id, options) => {\n    const row = document.querySelector(`[data-row-key=\"${id}\"]`);\n    if (row) {\n      row.scrollIntoView(options);\n    }\n  };\n\n\n  openModal = (senator) => {\n    this.setState({ modalSenator: senator });\n  };\n\n  selectSenator = (senator) => {\n    this.scrollTo(senator.id);\n    this.openModal(senator);\n    this.setState({\n      searchedSenator: senator.displayName,\n    });\n  };\n\n  closeModal = () => {\n    this.setState({ modalSenator: null });\n  };\n\n  render() {\n    const { selectedIssue } = this.state;\n    const senateMapByStatus = getSenatorsByStatus(this.state.senators, selectedIssue);\n    const filteredSenators = getFilteredSenators(\n      this.state.senators,\n      this.state.searchedColumn,\n      this.state.searchText\n    );\n\n    return (\n      <Layout className=\"App\">\n        <div\n          className={classNames([\n            \"title-bar\",\n            { \"has-back-button\": !!selectedIssue },\n          ])}\n        >\n          {selectedIssue ? (\n            <Row align=\"middle\">\n              <Col span={6}>\n                <Button\n                  ghost={true}\n                  onClick={this.clearIssue}\n                  icon={<ArrowLeftOutlined />}\n                >\n                  Back to all issues\n                </Button>\n              </Col>\n              <Col span={12}>\n                <h1>{find(TRACKED_ISSUES, { key: selectedIssue }).header}</h1>\n              </Col>\n            </Row>\n          ) : (\n            <h1>Peoples Whip Count</h1>\n          )}\n        </div>\n        <Header>\n          <Search\n            handleStateSearch={this.handleStateSearch}\n            senators={this.state.senators}\n            selectSenator={this.selectSenator}\n            handleReset={this.handleReset}\n          />\n          {this.renderModal()}\n\n          <Button\n            ghost\n            target=\"_blank\"\n            href=\"https://docs.google.com/forms/d/e/1FAIpQLScH8KYmrnWScWJr1v3jUwMdxP5ekN5x0IZ05Q23J7SxoDoQrw/viewform\"\n          >\n            Submit position update\n          </Button>\n        </Header>\n        <Content className=\"team\">\n          {this.state.selectedIssue ? (\n            <IssueCounts\n              selectSenator={this.selectSenator}\n              senateMapByStatus={senateMapByStatus}\n              filteredSenators={filteredSenators}\n              searchText={this.state.searchText}\n              searchedColumn={this.state.searchedColumn}\n              searchedSenator={this.state.searchedSenator}\n              tableHeight={this.state.tableHeight}\n              setTableHeight={this.setTableHeight}\n              openModal={this.openModal}\n              selectedIssue={this.state.selectedIssue}\n            />\n          ) : (\n            <LandingPageCards setIssue={this.setIssue} />\n          )}\n        </Content>\n        <Footer>\n          <div>\n            <a\n              href=\"https://townhallproject.com\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <img className=\"logo\" alt=\"town hall project\" src={thpLogo} />\n            </a>{\" \"}\n          </div>\n          <div>\n            <Button href=\"mailto:info@townhallproject.com\" type=\"text\">\n              Contact\n            </Button>\n          </div>\n        </Footer>\n      </Layout>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}